{"version":3,"file":"static/js/587.e3659472.chunk.js","mappings":"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","sources":["components/ErrorBoundary.js","components/config/axios.js","components/config/chatlogics.js","components/config/formatTime.js","miscellenious/Requests.js","miscellenious/upperNav.js","miscellenious/Progress.js","miscellenious/Payments.js","miscellenious/Myprograms.js","miscellenious/Message.js","miscellenious/ScrollableChat.js","miscellenious/FloatingChat.js","components/Ads.js","pages/Dashboard.js"],"sourcesContent":["import { Box, Link, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    console.error(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Box\n          display={\"flex\"}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          background={\"black\"}\n          width={\"100%\"}\n          height={\"100%\"}\n        >\n          {\" \"}\n          <Box\n            display={\"flex\"}\n            flexDirection={\"column\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n          >\n            {\" \"}\n            <Text fontSize={\"2xl\"}>An error occurred. Please </Text>\n            <Link color=\"teal.500\" href=\"/dashboard\">\n              Go Back...\n            </Link>\n          </Box>\n        </Box>\n      );\n    }\n\n    return this.props.children;\n  }\n}\nexport default ErrorBoundary;\n","import axios from \"axios\";\n\nconst axiosInstance = axios.create();\naxiosInstance.interceptors.response.use(\n  async (response) => {\n    return response;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n","import axios from \"axios\";\nimport { useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nexport const isSameSenderMargin = (messages, m, i, userId) => {\n  const isCurrentUserSender = m.sender?.$oid === userId;\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender?.$oid === m.sender?.$oid &&\n    !isCurrentUserSender\n  ) {\n    return 33;\n  } else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender?.$oid !== m.sender?.$oid &&\n      !isCurrentUserSender) ||\n    (i === messages.length - 1 && !isCurrentUserSender)\n  ) {\n    return 0;\n  } else {\n    return \"auto\";\n  }\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1]?.sender?._id !== m.sender?._id ||\n      messages[i + 1]?.sender?._id === undefined) &&\n    messages[i]?.sender?._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  const lastMessageSenderId = messages[messages.length - 1].sender?.$oid;\n  return (\n    i === messages.length - 1 &&\n    lastMessageSenderId !== userId &&\n    lastMessageSenderId\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender?.$oid === m.sender?.$oid;\n};\n\nexport const getSenderName = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\nexport const getSenderId = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1]._id : users[0]._id;\n};\n\nexport const getSenderFull = (loggedUser, user) => {\n  return user[0]._id === loggedUser._id ? user[1] : user[0];\n};\n\nexport async function getUserById(userId, token) {\n  if (!userId && !token) {\n    return;\n  }\n  try {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/user/getuserid/${userId}`, config);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport function useConnectSocket(token) {\n  const socketRef = useRef(null);\n  const { user } = ChatState();\n\n  useEffect(() => {\n    if (socketRef.current) {\n      return;\n    }\n\n    const newSocket = io(\"/\", {\n      query: { token },\n    });\n\n    newSocket.on(\"connect\", () => {\n      const email = user?.email;\n\n      newSocket.emit(\"newConnection\", { email });\n    });\n\n    newSocket.on(\"disconnect\", () => {});\n\n    socketRef.current = newSocket;\n\n    return () => {\n      newSocket.disconnect();\n      socketRef.current = null;\n    };\n  }, [token, user?.email]);\n\n  return socketRef.current;\n}\nexport async function makePaymentMpesa(amount, phoneNumber, user, toast) {\n  if (!phoneNumber) {\n    return;\n  }\n  try {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`,\n      },\n    };\n    const { data } = await axios.post(\n      `/api/paycheck/makepaymentmpesa/${user._id}?amount=${amount}`,\n      { phoneNumber },\n      config\n    );\n\n    if (data) {\n      toast({\n        title: \"You have been prompt to finish your subscription process\",\n        status: \"info\",\n        duration: 1000,\n        position: \"bottom\",\n      });\n    }\n  } catch (error) {}\n}\nexport async function handleApprove(accountType, type, user, setUser) {\n  try {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n      },\n    };\n    const { data } = await axios.put(\n      `/api/paycheck/${user._id}/${type}/${accountType}`,\n      {},\n      config\n    );\n\n    const userData = await {\n      ...user,\n      accountType: data.accountType,\n      subscription: data.subscription,\n      day: data.day,\n    };\n    localStorage.setItem(\"userInfo\", JSON.stringify(userData));\n    setUser(userData);\n  } catch (error) {\n    console.log(error);\n    throw new Error(\"Error occurred\", error);\n  }\n}\n","const formatMessageTime = (timestamp) => {\n  const messageTime = new Date(timestamp);\n  const currentTime = new Date();\n\n  const timeDifference = currentTime - messageTime;\n  const seconds = Math.floor(timeDifference / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  if (seconds < 60) {\n    return \"Just now\";\n  } else if (minutes < 60) {\n    return `${minutes} minute${minutes === 1 ? \"\" : \"s\"} ago`;\n  } else if (hours < 24) {\n    return `${hours} hour${hours === 1 ? \"\" : \"s\"} ago`;\n  } else if (days === 1) {\n    return \"Yesterday\";\n  } else if (days < 7) {\n    return `${days} day${days === 1 ? \"\" : \"s\"} ago`;\n  } else {\n    const options = {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      year: \"numeric\",\n    };\n    return messageTime.toLocaleDateString(\"en-US\", options);\n  }\n};\nexport default formatMessageTime;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  Image,\n  Text,\n  Flex,\n  Box,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Requests = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [clubRequests, setClubRequests] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { user } = ChatState();\n  const navigate = useNavigate();\n\n  const fetchClubRequests = useCallback(async () => {\n    if (!user) {\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/clubs/github/something/${user._id}`,\n        config\n      );\n      setClubRequests(data);\n    } catch (error) {\n      console.error(\"Error fetching club requests:\", error);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (user) {\n      fetchClubRequests();\n    }\n  }, [user, fetchClubRequests]);\n\n  const declineRequest = async (clubId) => {\n    if (!user || !clubId) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/clubs/decline/request/${clubId}/${user._id}`,\n        config\n      );\n      setClubRequests(data);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(\"Error fetching club requests/decline:\", error);\n    }\n  };\n  return (\n    <>\n      <Button\n        backgroundColor={\"white\"}\n        _hover={{ backgroundColor: \"transparent\" }}\n        onClick={onOpen}\n      >\n        <Image\n          src=\"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1709643622/icons8-group-48_asymxw.png\"\n          height={5}\n        />\n        {clubRequests && clubRequests.length > 0 && (\n          <Text\n            position=\"absolute\"\n            bottom=\"70%\"\n            right=\"70%\"\n            transform=\"translate(50%, 0)\"\n            bg=\"red.500\"\n            borderRadius=\"50%\"\n            width=\"2px\"\n            height=\"2px\"\n            p={1.5}\n          ></Text>\n        )}\n        <Text />\n      </Button>\n\n      <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay\n      bg=\"blackAlpha.300\"\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\n    />\n        <ModalContent>\n          <ModalHeader textAlign={\"center\"}>Clubs Requests</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            display={\"flex\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            flexDir={\"column\"}\n            maxH={\"300px\"}\n          >\n            {clubRequests && clubRequests.length > 0 ? (\n              clubRequests.map((club, index) => (\n                <Box\n                  display={\"flex\"}\n                  justifyContent={\"space-between\"}\n                  alignItems={\"center\"}\n                  width={\"100%\"}\n                  key={index}\n                >\n                  <Button\n                    key={club._id}\n                    justifyContent={\"space-between\"}\n                    onClick={() => navigate(`/showclub/${club._id}`)}\n                  >\n                    {index + 1}. Club Name: {club.name}\n                  </Button>\n                  <Button\n                    background={\"#f05e56\"}\n                    onClick={() => declineRequest(club._id)}\n                  >\n                    {loading ? <Spinner size={\"small\"} /> : `Decline`}\n                  </Button>\n                </Box>\n              ))\n            ) : (\n              <>\n                <Text>All club requests have been replied to.</Text>\n              </>\n            )}\n          </ModalBody>\n\n          <ModalFooter fontSize={\"small\"} textDecor={\"underline\"}>\n            These requests were made by club coaches.\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\nexport default Requests;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Badge,\n  Image,\n  useBreakpointValue,\n  IconButton,\n  CloseButton,\n} from \"@chakra-ui/react\";\nimport { Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { BellIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport Requests from \"./Requests\";\nimport React from \"react\";\n\nfunction UpperNav() {\n  const { user, notification, setNotification } = ChatState();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const navigate = useNavigate();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    setNotification([]);\n    navigate(\"/\");\n  };\n\n  const displayValue = useBreakpointValue({ base: \"none\", md: \"flex\" });\n\n  const textVisibility = useBreakpointValue({\n    base: \"hidden\",\n    md: \"visible\",\n  });\n\n  return (\n    <>\n      <Box\n        display={\"flex\"}\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p={3}\n        paddingBottom={2}\n        boxShadow=\"2xl\"\n        zIndex={10}\n        top={0}\n        position={\"fixed\"}\n      >\n        <Text\n          textAlign={\"center\"}\n          fontSize={{ base: \"small\", md: \"medium\" }}\n          fontWeight={\"bold\"}\n          userSelect={\"none\"}\n          p={0}\n          m={0}\n          pl={3}\n        >\n          Worldsamma\n        </Text>\n        <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\n          <Button\n            backgroundColor={\"transparent\"}\n            display={displayValue}\n            visibility={textVisibility}\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\n            onClick={() => {\n              navigate(\"/dashboard\");\n            }}\n          >\n            My Programs\n          </Button>\n          <Button\n            variant=\"ghost\"\n            onClick={onOpen}\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\n          >\n            <Text\n              display={{ base: \"none\", md: \"flex\" }}\n              px={4}\n              userSelect={\"none\"}\n            >\n              Discover\n            </Text>\n          </Button>\n          <Requests />\n        </Box>\n\n        <div>\n          <Menu>\n            <MenuButton p={1} position=\"relative\">\n              <BellIcon fontSize=\"2xl\" p={0} m={0} />\n              {notification.length > 0 && (\n                <Badge\n                  variant=\"subtle\"\n                  position=\"absolute\"\n                  top=\"-3px\"\n                  right=\"-3px\"\n                  backgroundColor={\"red\"}\n                  zIndex={1}\n                  borderRadius={\"50%\"}\n                  color=\"white\"\n                >\n                  {notification.length}\n                </Badge>\n              )}\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {`New Message from ${\n                    notif.sender ? notif.sender.name : \"Coach\"\n                  } ADM: ${notif.sender ? notif.sender.admission : \" \"}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton\n              as={Button}\n              bg=\"white\"\n              _hover={{ backgroundColor: \"transparent\" }}\n              onClick={onOpen}\n            >\n              {displayValue === \"flex\" ? (\n                <Avatar\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={user?.name}\n                  src={user?.pic}\n                />\n              ) : (\n                <IconButton\n                  backgroundColor={\"transparent\"}\n                  icon={\n                    <Image\n                      src=\"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1706276791/icons8-menu-50_afv1fe.png\"\n                      height={5}\n                    />\n                  }\n                />\n              )}\n            </MenuButton>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n      <DrawerOverlay\n      bg=\"blackAlpha.300\"\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\n    />\n        <DrawerContent>\n          <DrawerHeader\n            borderBottomWidth=\"1px\"\n            display={\"flex\"}\n            justifyContent={\"space-between\"}\n          >\n            Dashboard\n            <CloseButton onClick={onClose} />\n          </DrawerHeader>\n          <DrawerBody\n            display={\"flex\"}\n            flexDir={\"column\"}\n            justifyContent={\"space-between\"}\n            width={\"100%\"}\n          >\n            <Box\n              padding={3}\n              display={\"flex\"}\n              justifyContent={\"space-around\"}\n              flexDir={\"column\"}\n            >\n              <Button\n                display={\"flex\"}\n                justifyContent={\"left\"}\n                alignItems={\"center\"}\n                background={\"white\"}\n                m={1}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => navigate(\"/profile\")}\n              >\n                <Avatar\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={user?.name}\n                  src={user?.pic}\n                />\n                <Text p={2} m={1}>\n                  Profile\n                </Text>\n              </Button>\n              <Button\n                justifyContent={\"left\"}\n                background={\"white\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => {\n                  navigate(\"/dashboard\");\n                  onClose();\n                }}\n              >\n                My Programs\n              </Button>\n              <Button\n                justifyContent={\"start\"}\n                background={\"white\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => {\n                  navigate(\"/clubs\");\n                  onClose();\n                }}\n              >\n                Clubs\n              </Button>\n              <Button\n                justifyContent={\"left\"}\n                background={\"white\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                isDisabled={!user?.provinces}\n                onClick={() => {\n                  navigate(\"/province\");\n                  onClose();\n                }}\n              >\n                Provincial level\n              </Button>\n              <Button\n                background={\"white\"}\n                justifyContent={\"left\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => {\n                  navigate(\"/national\");\n                  onClose();\n                }}\n              >\n                National level\n              </Button>\n              <Button\n                background={\"white\"}\n                justifyContent={\"left\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n              >\n                International Championship\n              </Button>\n            </Box>\n            <Button onClick={logoutHandler}>Log out</Button>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default UpperNav;\n","import { Text } from \"@chakra-ui/react\";\nimport styled from \"styled-components\";\nimport { keyframes } from \"styled-components\";\nimport { GiBlackBelt } from \"react-icons/gi\";\nconst ProgressContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  position: relative;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n`;\n\nconst ProgressSlot = styled.div`\n  display: flex;\n  width: 30%;\n  height: 50px;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  font-weight: bold;\n  padding: 0;\n  margin: 0;\n`;\nconst progressAnimation = keyframes`\n  from {\n    width: 1%; /* Adjust the initial width as needed */\n  }\n  to {\n    width: ${({ level }) => (level + 1.2) * 10}%;\n  }\n`;\n\nconst blinkingAnimation = keyframes`\n  0%, 100% {\n    background-color: #ed7d66; /* Slightly less green color */\n  }\n  50% {\n    background-color: #66d171; /* Default green color */\n  }\n`;\n\nconst ProgressArrow = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 50px;\n  height: 14px;\n  background-color: #66d171;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin: 0;\n  padding: 0;\n  width: ${({ level }) => (level + 1) * 10}%;\n  animation: ${progressAnimation} 2s ease-in-out,\n    ${blinkingAnimation} 3s ease-in-out infinite;\n`;\n\nconst Progress = ({ userBelt }) => {\n  const progressLevels = [\n    \"Guest\",\n    `grey`,\n    `#baba30`,\n    `orange`,\n    `red`,\n    `purple`,\n    `green`,\n    `blue`,\n    `brown`,\n    `black`,\n  ];\n  const progress = [\n    \"Guest\" || undefined,\n    \"Beginner\",\n    \"Yellow\",\n    \"Orange\",\n    \"Red\",\n    \"Purple\",\n    \"Green\",\n    \"Blue\",\n    \"Brown\",\n    \"Black\",\n  ];\n\n  const level = progress.indexOf(userBelt);\n\n  return (\n    <ProgressContainer>\n      {progressLevels.map((belt, index) => (\n        <ProgressSlot key={index}>\n          <Text\n            marginTop={-3}\n            fontWeight={{ base: \"sm\", md: \"md\" }}\n            fontSize={{ base: \"10px\", md: \"md\" }}\n            textAlign=\"center\"\n          >\n            {index > 0 ? (\n              <GiBlackBelt style={{ color: belt, fontSize: \"1.5rem\" }} />\n            ) : (\n              belt\n            )}\n          </Text>\n        </ProgressSlot>\n      ))}\n      <ProgressArrow level={level}>\n        {\" \"}\n        <Text textAlign={\"center\"} fontSize={\"small\"} p={1}>\n          {(level + 1) * 10}%\n        </Text>{\" \"}\n      </ProgressArrow>\n    </ProgressContainer>\n  );\n};\n\nexport default Progress;\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  useColorModeValue,\r\n  VStack,\r\n  useToast,\r\n  Button,\r\n  Image,\r\n  Input,\r\n  ModalContent,\r\n  ModalOverlay,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Modal,\r\n  useDisclosure,\r\n  Divider,\r\n} from \"@chakra-ui/react\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport {\r\n  makePaymentMpesa,\r\n  useConnectSocket,\r\n} from \"../components/config/chatlogics\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Paycheck({ course }) {\r\n  const toast = useToast();\r\n  const { user, setUser } = ChatState();\r\n  const [show, setShow] = useState(false);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const socket = useConnectSocket(user?.token);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on(\"noPayment\", (nothing) => {\r\n      toast({\r\n        title: nothing,\r\n        description: \"Subscription unsuccessful\",\r\n        status: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom\",\r\n      });\r\n    });\r\n    socket.on(\"userUpdated\", async (update) => {\r\n      setUser((prev) => ({ ...prev, belt: update.belt }));\r\n\r\n      toast({\r\n        title: \"Successfully updated\",\r\n        description: `Ranked ${update.belt}`,\r\n        status: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom\",\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"userUpdated\");\r\n      socket.off(\"noPayment\");\r\n    };\r\n  }, [setUser, toast, socket]);\r\n\r\n  const handleAfterPay = async () => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user/update`, config);\r\n      setUser((prev) => ({ ...prev, belt: data.belt }));\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        toast({\r\n          title: \"Belt achieved!\",\r\n          description: error.response.data.message,\r\n          status: \"info\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      } else {\r\n        // Handle other errors\r\n        console.error(\"An error occurred:\", error);\r\n        toast({\r\n          title: \"An Error Occurred!\",\r\n          description: \"Please try again later.\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkAvailability = () => {\r\n    const userCertificatesLength = user && user.certificates.length;\r\n    const courseIndex = course.id - 1;\r\n\r\n    // Allow enrollment for the first/next course only if the user is a guest\r\n    const canEnroll =\r\n      (user && user.belt === \"Guest\" && courseIndex === 0) ||\r\n      userCertificatesLength + 1 === courseIndex + 1;\r\n\r\n    if (canEnroll) {\r\n      // Open the payment modal\r\n      onOpen();\r\n    } else if (user && user.belt === course.title) {\r\n      toast({\r\n        title: \"Currently on this course\",\r\n        description: \"You don't need to enroll in this course.\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      // Display a toast message indicating unavailability\r\n      toast({\r\n        title: \"Course Unavailable\",\r\n        description:\r\n          \"You don't meet the requirements to enroll in this course.\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        borderRadius={20}\r\n        fontSize={\"small\"}\r\n        background={\"#a432a8\"}\r\n        textColor={\"white\"}\r\n        _hover={{ color: \"black\" }}\r\n        m={1}\r\n        onClick={checkAvailability}\r\n      >\r\n        Enroll\r\n      </Button>\r\n      <Modal\r\n        size=\"lg\"\r\n        onClose={() => {\r\n          setShow(false);\r\n          onClose();\r\n        }}\r\n        isOpen={isOpen}\r\n        isCentered\r\n      >\r\n        <ModalOverlay bg=\"blackAlpha.300\" backdropFilter=\"blur(10px) hue-rotate(90deg)\" />\r\n        <ModalContent display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" width={\"100%\"}>\r\n          <ModalHeader fontSize=\"40px\" fontFamily=\"Work sans\">\r\n            <Text\r\n              textAlign={\"center\"}\r\n              fontSize={\"sm\"}\r\n              fontWeight={500}\r\n              p={2}\r\n              px={3}\r\n              color={\"green.500\"}\r\n              rounded={\"full\"}\r\n            >\r\n              Elevate Your Craft: {course.title}\r\n            </Text>\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" width={\"100%\"}>\r\n            <PayPalScriptProvider\r\n              options={{\r\n                clientId: \"AZAdYFR_SbadcgOcCLYn9ajkReJTZmOCnEeAvQ3xPYAE5BMYFBHi4vDeILfNwBO-hh-8wfyGC9lNeB1I\",\r\n              }}\r\n            >\r\n              <PayPalButtons\r\n                createOrder={(data, actions) => {\r\n                  const amount = 12.0;\r\n                  return actions.order.create({\r\n                    purchase_units: [\r\n                      {\r\n                        amount: {\r\n                          currency_code: \"USD\",\r\n                          value: amount.toFixed(2),\r\n                        },\r\n                      },\r\n                    ],\r\n                  });\r\n                }}\r\n                onApprove={async (data, actions) => {\r\n                  await handleAfterPay();\r\n                  return actions.order.capture().then(function (details) {\r\n                    toast({\r\n                      title: \"Success\",\r\n                      description: data.subscriptionID,\r\n                      status: \"info\",\r\n                      duration: 3000,\r\n                      isClosable: true,\r\n                      position: \"bottom\",\r\n                    });\r\n                  });\r\n                }}\r\n                onCancel={() => {\r\n                  toast({\r\n                    title: \"Cancelled\",\r\n                    description: \"Subscription Unsuccessful\",\r\n                    status: \"info\",\r\n                    isClosable: true,\r\n                    position: \"bottom\",\r\n                  });\r\n                }}\r\n              />\r\n            </PayPalScriptProvider>\r\n            <Button\r\n              fontSize={\"small\"}\r\n              width={\"100%\"}\r\n              bg={useColorModeValue(\"green.100\", \"green.900\")}\r\n              onClick={() => {\r\n                setShow(true);\r\n              }}\r\n              p={0}\r\n            >\r\n              <Image\r\n                height={5}\r\n                width={\"auto\"}\r\n                src={\r\n                  \"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1694007922/mpesa_ppfs6p.png\"\r\n                }\r\n                alt={\"\"}\r\n                loading=\"lazy\"\r\n              />{\" \"}\r\n              Pay via Mpesa\r\n            </Button>\r\n            {show && (\r\n              <Box m={3}>\r\n                <Text textAlign={\"center\"} justifyContent={\"center\"} fontSize={\"2xl\"}>\r\n                  Enter Your Mpesa Phone Number\r\n                </Text>\r\n                <Input\r\n                  fontSize={\"small\"}\r\n                  color={\"green.400\"}\r\n                  fontWeight={\"bold\"}\r\n                  placeholder=\"i.e 0710334455\"\r\n                  textAlign={\"center\"}\r\n                  type=\"text\"\r\n                  onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  value={phoneNumber}\r\n                  minLength={10}\r\n                  maxLength={10}\r\n                />\r\n                <Divider p={2} />\r\n                <Button\r\n                  width={\"100%\"}\r\n                  onClick={() => {\r\n                    makePaymentMpesa(\"4500\", phoneNumber, user, toast);\r\n                    setShow(false);\r\n                    toast({\r\n                      title: \"Wait as message is sent\",\r\n                      status: \"loading\",\r\n                      isClosable: true,\r\n                      position: \"bottom\",\r\n                      duration: 5000,\r\n                    });\r\n                  }}\r\n                  isDisabled={phoneNumber.length !== parseInt(10)}\r\n                  colorScheme=\"green\"\r\n                >\r\n                  Proceed\r\n                </Button>\r\n                <Text textAlign={\"center\"} justifyContent={\"center\"}>\r\n                  You'll be sent a Message\r\n                </Text>\r\n              </Box>\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter display=\"flex\"></ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import {\n  Box,\n  Flex,\n  Text,\n  Button,\n  Link,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport Paycheck from \"./Payments\";\nimport { GiBlackBelt } from \"react-icons/gi\";\n\nconst MyPrograms = ({ courses, user }) => {\n  const handleDownload = (title, url) => {\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `${title}BeltCertificate.pdf`;\n    a.click();\n  };\n\n  const progressLevels = [\n    `#baba30`,\n    `orange`,\n    `red`,\n    `purple`,\n    `green`,\n    `blue`,\n    `brown`,\n    `black`,\n  ];\n\n  return (\n    <Box \n      display={\"flex\"}\n      flexDir={\"column\"}\n      alignItems={\"center\"}\n      justifyContent={\"center\"}\n      width=\"100%\"\n      p={4}\n      backgroundColor={\"white\"}\n    >\n      <Text fontSize=\"20px\" fontWeight=\"medium\">\n        My Programs\n      </Text>\n      {courses.map((course, index) => (\n        <Flex\n          key={course.id}\n          display={\"flex\"}\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          m={4}\n          p={{ base: \"1\", md: \"4\" }}\n          width={{ base: \"90%\", md: \"70%\" }}\n          border={\"1px\"}\n          borderRadius={5}\n        >\n          <Box>\n            <Text fontSize={\"larger\"} fontWeight={\"medium\"}>\n              <Text>{course.title}</Text>\n              <GiBlackBelt\n                style={{ color: progressLevels[index], fontSize: \"3rem\" }}\n              />\n            </Text>\n            {course.title === user?.belt && (\n              <Link\n                href={`/courses/${course.id}`}\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n                p={0}\n                m={0}\n              >\n                Continue\n              </Link>\n            )}\n          </Box>\n\n          {user && user.certificates && user.certificates[index] ? (\n            <Button\n              onClick={handleDownload(course.title, user.certificates[index])}\n              borderRadius={20}\n              fontSize={\"small\"}\n            >\n              Download Certificate\n            </Button>\n          ) : (\n            <Box\n              display={\"flex\"}\n              flexDir={\"column\"}\n              justifyContent={\"space-between\"}\n              alignItems={\"center\"}\n            >\n              <Paycheck course={course} />\n              <Text\n                fontSize={\"sm\"}\n                fontWeight={400}\n                bg={useColorModeValue(\"green.50\", \"green.900\")}\n                p={3}\n                px={3}\n                color={\"green.500\"}\n                rounded={\"full\"}\n              >\n                $12 Only\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      ))}\n    </Box>\n  );\n};\n\nexport default MyPrograms;\n","// Message.js\nimport React from \"react\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport { Box, Image, Text } from \"@chakra-ui/react\";\nimport formatMessageTime from \"../components/config/formatTime\";\n\nfunction Message({ m }) {\n  const { user, setSelectedChat, setSend } = ChatState();\n\n  const handleClick = () => {\n    if (m.sender?._id !== user._id) {\n      setSelectedChat(m.sender?._id);\n      setSend(m.sender?.name);\n    }\n  };\n\n  return (\n    <>\n      <Box\n        display={\"flex\"}\n        flexDir={\"column\"}\n        position={\"relative\"}\n        fontSize={\"small\"}\n        onClick={handleClick}\n      >\n        <Text fontSize={\"smaller\"} textDecor={\"underline\"} textAlign={\"end\"}>\n          {m.sender?._id === user._id ? (\n            `You to ${m.recipient?.name}`\n          ) : (\n            <Text>\n              {m.sender?.name} -{m.sender?.admission}\n            </Text>\n          )}\n        </Text>\n\n        {m.content}\n\n        <Text display={\"flex\"} textAlign=\"right\" m={0} p={0} fontSize={\"2xs\"}>\n          {m.sender?._id === user._id ? (\n            <Image\n              src=\"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1699355257/icons8-sent-64_e9vrai.png\"\n              height={5}\n              p={0}\n              loading=\"lazy\"\n              m={0}\n            />\n          ) : (\n            \"\"\n          )}\n          {formatMessageTime(m.createdAt)}\n        </Text>\n      </Box>\n    </>\n  );\n}\n\nexport default Message;\n","import ScrollableFeed from \"react-scrollable-feed\";\nimport React from \"react\";\nimport { Box, VStack } from \"@chakra-ui/react\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport Message from \"./Message\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n  return (\n    <ScrollableFeed height={\"100%\"}>\n      <VStack align=\"start\" spacing={4} p={4} maxH=\"95%\" overflowY=\"auto\">\n        {messages.map((m, i) => {\n          if (!m && !user) {\n            return null;\n          }\n\n          const isUserMessage = m.sender?._id === user._id;\n\n          return (\n            <Box\n              bg={isUserMessage ? \"#BEE3F8\" : \"#B9F5D0\"}\n              borderRadius=\"20px\"\n              p=\"5px 15px\"\n              maxW=\"75%\"\n              alignSelf={isUserMessage ? \"flex-end\" : \"flex-start\"}\n              key={m._id}\n            >\n              <Message m={m} />\n            </Box>\n          );\n        })}\n      </VStack>\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport {\n  Box,\n  Input,\n  Button,\n  Text,\n  useToast,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useConnectSocket } from \"../components/config/chatlogics\";\nimport { IoIosSend } from \"react-icons/io\";\n\nconst FloatingChat = ({ onClose }) => {\n  const toast = useToast();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [chatOptions, setChatOptions] = useState([\n    \"WSF\",\n    \"Coach\",\n    \"Provincial Coach\",\n    \"National Coach\",\n  ]);\n  const [selectedChatOption, setSelectedChatOption] = useState(null);\n  const [sender, setSender] = useState(null);\n  const [loading, setLoading] = useState();\n  const [rank, setRank] = useState(false);\n  const [sending, setSending] = useState(false);\n  const {\n    user,\n    selectedChat,\n    setSelectedChat,\n    send,\n    setSend,\n    messages,\n    setMessages,\n    national,\n    province,\n  } = ChatState();\n  const navigate = useNavigate();\n\n  const socket = useConnectSocket(user?.token);\n\n  useEffect(() => {\n    if (\n      user?.admin ||\n      user?.coach ||\n      province?.provincialCoach._id === user?._id ||\n      national?.nationalCoach._id === user?._id\n    ) {\n      setRank(true);\n    }\n  }, [user, national, province, setRank]);\n\n  useEffect(() => {\n    if (user.provinces === undefined) {\n      setChatOptions((prevOptions) =>\n        prevOptions.filter((option) => option !== \"Provincial Coach\")\n      );\n    }\n  }, [user.provinces]);\n\n  useEffect(() => {\n    if (selectedChatOption === \"Coach\" && !user?.physicalCoach) {\n      navigate(\"/clubs\");\n      toast({\n        title: \"You've not joined a Club\",\n        description: \"Join a club or make one as you'd please\",\n        status: \"info\",\n        duration: 5000,\n        position: \"bottom-left\",\n      });\n      setSelectedChatOption(null)\n      return;\n    } else if (selectedChatOption === \"Provincial Coach\" && !province) {\n      setSelectedChatOption(null)\n      navigate(\"/province\");\n      toast({\n        title: \"Provincial Samma Association seat is empty!\",\n        description: \"Apply for Interim\",\n        status: \"info\",\n        duration: 5000,\n        position: \"bottom-left\",\n      });\n      return\n    } else if (selectedChatOption === \"National Coach\" && !national) {\n      setSelectedChatOption(null)\n      navigate(\"/national\");\n      toast({\n        title: \"National Samma Association seat is empty!\",\n        description: \"Apply for Interim\",\n        status: \"info\",\n        duration: 5000,\n        position: \"bottom-left\",\n      });\n      return;\n    }\n  }, [selectedChatOption, navigate, user, national, province, toast]);\n\n  const fetchMessages = useCallback(async () => {\n    if (!user) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(`/api/message/${user._id}`, config);\n\n      setMessages(data);\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n\n      setLoading(false);\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  }, [toast, user]);\n\n  useEffect(() => {\n    fetchMessages();\n  }, [fetchMessages]);\n\n  useEffect(() => {\n    if (selectedChatOption === \"Coach\") {\n      setSender(user.physicalCoach);\n    } else if (selectedChatOption === \"WSF\" && user) {\n      setSender(user.wsf);\n    } else if (selectedChatOption === \"Provincial Coach\" && province) {\n      setSender(province.provincialCoach._id);\n    } else if (selectedChatOption === \"National Coach\" && national) {\n      setSender(national.nationalCoach._id);\n    }\n  }, [selectedChatOption, national, province, user, setSender]);\n\n  useEffect(() => {\n    if (selectedChat) {\n      setSender(selectedChat);\n    }\n  }, [selectedChat, setSender]);\n\n  const sendMessage = async (event) => {\n  \n    if ((event && event.type === \"click\") || event && event.key === \"Enter\") {\n  \n      setSending(true);\n  \n      if (!selectedChatOption && !rank) {\n        console.log(\"Select a recipient: Please choose whom you want to chat with.\");\n        toast({\n          title: \"Select a recipient\",\n          description: \"Please choose whom you want to chat with.\",\n          status: \"info\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n        setSending(false);\n        return;\n      }\n  \n      if (rank && !selectedChat) {\n        console.log(\"Select a recipient: Please choose whom you want to reply to.\");\n        toast({\n          title: \"Select a recipient\",\n          description: \"Please choose whom you want to reply to.\",\n          status: \"info\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n        setSending(false);\n        return;\n      }\n  \n      try {\n        const userId = user._id;\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n  \n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          { sender: sender, content: newMessage, userId },\n          config\n        );\n  \n        setMessages((prevMessages) => [...prevMessages, data]);\n  \n        socket.emit(\"new message\", data);\n        setSending(false);\n      } catch (error) {\n        setSending(false);\n        console.log(error);\n        toast({\n          title: \"Failed to send the Message\",\n          description: \"Please try again after some time\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n  \n  const handleChatClose = () => {\n    onClose();\n  };\n  return (\n    <Box\n      display={\"flex\"}\n      flexDirection={\"column\"}\n      position=\"fixed\"\n      bottom=\"0\"\n      right=\"1\"\n      height={\"90vh\"}\n      width={{ base: \"95%\", lg: \"450px\" }}\n      background={\"white\"}\n      borderRadius={4}\n      boxShadow=\"dark-lg\"\n      p=\"6\"\n      rounded=\"md\"\n      bg=\"white\"\n      zIndex={11}\n    >\n      <Button p={2} onClick={handleChatClose}>\n        X\n      </Button>\n      <Box\n        p={2}\n        top=\"0\"\n        left=\"0\"\n        height=\"95%\"\n        display=\"flex\"\n        flexDir=\"column\"\n        justifyContent=\"center\"\n      >\n        {!selectedChatOption && !rank && (\n          <Box display={\"flex\"} flexDir={\"column\"} bg=\"transparent\">\n            <Text>Select whom you want to chat with:</Text>\n            {chatOptions.map((option) => (\n              <Button\n                key={option}\n                bg=\"transparent\"\n                onClick={() => setSelectedChatOption(option)}\n              >\n                {option}\n              </Button>\n            ))}\n          </Box>\n        )}\n        {loading ? (\n          <Spinner size={\"lg\"} />\n        ) : (\n          <ScrollableChat messages={messages} />\n        )}\n        <Box position=\"absolute\" bottom={0} width=\"100%\">\n          {rank && (\n            <Box\n              display={\"flex\"}\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n              width={\"100%\"}\n            >\n              Replying to {selectedChat ? send : \"(select a message please)\"}\n              {selectedChat && (\n                <Button\n                  onClick={() => {\n                    setSelectedChat(null);\n                    setSend(null);\n                  }}\n                  background={\"transparent\"}\n                  textColor={\"red\"}\n                >\n                  X\n                </Button>\n              )}\n            </Box>\n          )}\n\n          {selectedChatOption && (\n            <Box\n              display={\"flex\"}\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n              width={\"100%\"}\n            >\n              Chatting with {selectedChatOption}\n              <Button\n                onClick={() => setSelectedChatOption(null)}\n                background={\"transparent\"}\n                textColor={\"red\"}\n              >\n                X\n              </Button>\n            </Box>\n          )}\n\n          <Box\n            display={\"flex\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            width={\"90%\"}\n            background={\"white\"}\n          >\n            <Input\n              placeholder=\"Type your message...\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n            />\n            <IconButton isLoading={sending} onClick={(event) => sendMessage(event)} p={0} m={1}>\n            <IoIosSend/>\n            </IconButton>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default FloatingChat;\n","import { Box, Text } from '@chakra-ui/layout';\r\nimport React, { useEffect } from 'react';\r\n\r\nconst AdComponent = () => {\r\n    useEffect(() => {\r\n      // Ensure the adsbygoogle script is loaded\r\n      (window.adsbygoogle = window.adsbygoogle || []).push({});\r\n    }, []);\r\n  \r\n    return (\r\n      <Box\r\n        display={\"flex\"}\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        flexDir={\"column\"}\r\n        width={{ base: \"100%\", md: \"70%\" }}\r\n        borderRadius={5}\r\n        position=\"relative\" // Ensure parent position is relative for children positioning\r\n      >\r\n        <Text textAlign={\"center\"} fontSize={\"large\"}>Advertisement</Text>\r\n        <ins\r\n          className=\"adsbygoogle\"\r\n          style={{ display: 'block', width: '100%' }} // Ensure the ad takes full width\r\n          data-ad-client=\"ca-pub-9398367168853498\"\r\n          data-ad-slot=\"2234347600\"\r\n          data-ad-format=\"auto\"\r\n          data-full-width-responsive=\"true\"\r\n        ></ins>\r\n      </Box>\r\n    );\r\n  };\r\n  export default AdComponent;","import React, { useCallback, useEffect, useState } from \"react\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport { Box, Button, IconButton, useToast } from \"@chakra-ui/react\";\nimport UpperNav from \"../miscellenious/upperNav\";\nimport Progress from \"../miscellenious/Progress\";\nimport MyPrograms from \"../miscellenious/Myprograms\";\nimport FloatingChat from \"../miscellenious/FloatingChat\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport { useConnectSocket } from \"../components/config/chatlogics\";\nimport axiosInstance from \"../components/config/axios\";\nimport axios from \"axios\";\nimport AdComponent from \"../components/Ads\";\nimport { MdOutlineFiberSmartRecord, MdOutlineMarkUnreadChatAlt } from \"react-icons/md\";\n\nconst Dashboard = ({ courses }) => {\n  const [chatOpen, setChatOpen] = useState(false);\n  const {\n    user,\n    setUser,\n    setClub,\n    setMessages,\n    notification,\n    setNotification,\n    setNational,\n    setProvince,\n  } = ChatState();\n  const navigate = useNavigate();\n  const [isHovered, setHovered] = useState(false);\n  const [show, setShow] = useState(false);\n  const toast = useToast();\n  const [live, setLive] = useState([]);\n  const socket = useConnectSocket(user?.token);\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (!userInfo) {\n      navigate(\"/\");\n      return;\n    } else {\n      setUser(userInfo);\n    }\n  }, [setUser, navigate]);\n\n  const requestClub = useCallback(async () => {\n    if (!user?.coach) {\n      return;\n    }\n\n    try {\n      const clubId = user.coach;\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      axiosInstance\n        .get(`/api/clubs/${clubId}`, config)\n        .then(async (response) => {\n          setClub(response.data);\n        })\n        .catch((error) => {\n        });\n    } catch (error) {\n      console.error(\"Error fetching Club:\", error);\n    }\n  }, [user?.token, setClub]);\n\n  useEffect(() => {\n    if (!socket) {\n      return;\n    }\n    const showNotification = (title, options) => {\n      if (Notification.permission === \"granted\") {\n        new Notification(title, options);\n        const audio = new Audio(\n          \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"\n        );\n        audio.addEventListener(\"error\", (error) => {\n          console.error(\"Audio playback error:\", error);\n        });\n\n        audio.play().catch((error) => {\n          console.error(\"Audio playback error:\", error);\n        });\n      } else if (Notification.permission !== \"denied\") {\n        Notification.requestPermission().then((permission) => {\n          if (permission === \"granted\") {\n            new Notification(title, options);\n            const audio = new Audio(\n              \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"\n            );\n            audio.addEventListener(\"error\", (error) => {\n              console.error(\"Audio playback error:\", error);\n            });\n\n            audio.play().catch((error) => {\n              console.error(\"Audio playback error:\", error);\n            });\n          }\n        });\n      }\n    };\n\n    socket.on(\"message received\", (newMessageReceived) => {\n      setNotification([newMessageReceived, ...notification]);\n      showNotification(\n        \"New Message\",\n        {\n          body: `New message from ${newMessageReceived.sender.name}`,\n          icon: `${newMessageReceived.sender.pic}`,\n        },\n        () => {\n          navigate(\"/dashboard\");\n        }\n      );\n      setMessages((prevMessages) => [...prevMessages, newMessageReceived]);\n    });\n\n    socket.on(\"updates\", (requests) => {\n      setUser((prevUser) => ({\n        ...prevUser,\n        belt: requests.belt,\n        clubRequests: requests.clubRequests,\n        provinceRequests: requests.provinceRequests,\n        nationalRequests: requests.nationalRequests,\n      }));\n    });\n    socket.on(\"provincial request\", (request) => {\n      setUser((prevUser) => ({\n        ...prevUser,\n        provinceRequests: [\n          ...prevUser.provinceRequests,\n          request.provincialCoach,\n        ],\n      }));\n    });\n    socket.on(\"national request\", (request) => {\n      setUser((prevUser) => ({\n        ...prevUser,\n        provinceRequests: [...prevUser.nationalRequests, request.nationalCoach],\n      }));\n    });\n\n    socket.on(\"liveSessionStarted\", (clubName) => {\n      setLive((prev) => ({ ...prev, clubName }));\n    });\n\n    socket.on(\"certificates\", (certificates) => {\n      setUser((prev) => ({\n        ...prev,\n        certificates: certificates.certificates,\n        belt: certificates.belt,\n      }));\n    });\n\n    return () => {\n      socket.off(\"updates\");\n      socket.off(\"provincial request\");\n      socket.off(\"liveSessionStarted\");\n      socket.off(\"message received\");\n      socket.off(\"certificates\");\n    };\n  }, [socket, setUser, user?.token, user]);\n\n  const fetchClubs = useCallback(async () => {\n    if (!user) {\n      navigate(\"/dashboard\");\n      return;\n    }\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n      },\n    };\n    try {\n      axiosInstance\n        .get(\n          `/api/province/officials/${user.country}/${user.provinces}`,\n          config\n        )\n        .then(async (response) => {\n          if (response.data.length === 0) {\n          } else {\n            setProvince(data);\n          }\n        })\n        .catch((error) => {\n          if (error.response && error.response.status === 401) {\n            toast({\n              title: \"Your session has expired\",\n              description: \"Logging out in 8 seconds\",\n              duration: 8000,\n              status: \"loading\",\n              position: \"bottom\",\n            });\n\n            setTimeout(() => {\n              localStorage.removeItem(\"userInfo\");\n              navigate(\"/\");\n            }, 8000);\n          }\n        });\n    } catch (error) {\n      console.log(error);\n    }\n    try {\n      const { data } = await axios.get(\n        `/api/national/officials/${user.country}/${user.provinces}`,\n        config\n      );\n\n      if (data.length === 0) {\n      } else {\n        setNational(data);\n      }\n    } catch (error) {\n      console.log(error);\n      toast({\n        title: \"An Error Occurred!\",\n        description: \"Try again after sometime.\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  }, [user, setNational, toast, setProvince]);\n\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/dashboard\");\n      return;\n    }\n    fetchClubs();\n    requestClub();\n  }, [fetchClubs, navigate, user]);\n\n  return (\n    <ErrorBoundary fallback={<p style={{ color: \"white\" }}>Something went wrong</p>} userSelect=\"none\">\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" flexDir=\"column\" width=\"100%\" background=\"white\" position=\"relative\">\n        <UpperNav />\n        <Box width=\"100%\" mt={20}>\n          <Progress userBelt={user?.belt} />\n        </Box>\n        <MyPrograms courses={courses} user={user} />\n        {chatOpen && <FloatingChat onClose={() => setChatOpen(false)} />}\n        {live.length > 0 && (\n          <Box position=\"fixed\" top=\"90px\" right=\"50px\" borderRadius=\"20px\" border=\"1px solid #d24ce0\">\n            {!show && (\n              <Button\n                backgroundColor=\"white\"\n                _hover={{ backgroundColor: \"white\" }}\n                onClick={() => setShow(true)}\n                width=\"100%\"\n                border=\"1px solid #d24ce0\"\n                borderRadius=\"20px\"\n              >\n                Live Clubs{'\\u00A0'}\n                <MdOutlineFiberSmartRecord style={{ fontSize: \"30px\" }} />\n              </Button>\n            )}\n            {show &&\n              live.map((liveItem) => (\n                <Button\n                  key={liveItem._id}\n                  textAlign=\"center\"\n                  width=\"100%\"\n                  backgroundColor=\"white\"\n                  _hover={{ backgroundColor: \"white\" }}\n                  onClick={() => {\n                    setLive((prevLive) => prevLive.filter((n) => n !== liveItem));\n                    navigate(`/showclub/${liveItem._id}/${true}`);\n                    setShow(false);\n                  }}\n                  borderRadius=\"20px\"\n                >\n                  {`${liveItem.name} are live...`}\n                </Button>\n              ))}\n          </Box>\n        )}\n        <IconButton\n          display={chatOpen ? \"none\" : \"flex\"}\n          position=\"fixed\"\n          bottom=\"10px\"\n          right=\"10px\"\n          icon={\n            <MdOutlineMarkUnreadChatAlt\n              style={{\n                width: isHovered ? \"60px\" : \"40px\",\n                transition: \"width 0.3s ease-in-out\",\n                color: \"teal\",\n                fontSize: \"30px\",\n              }}\n            />\n          }\n          backgroundColor=\"white\"\n          border=\"1px solid black\"\n          _hover={{ backgroundColor: \"white\" }}\n          onClick={() => setChatOpen(true)}\n          onMouseEnter={() => setHovered(true)}\n          onMouseLeave={() => setHovered(false)}\n          borderRadius=\"20px\"\n        />\n        <AdComponent />\n      </Box>\n    </ErrorBoundary>\n  );\n};\nexport default Dashboard;\n"],"names":["ErrorBoundary","React","constructor","props","super","this","state","hasError","getDerivedStateFromError","error","componentDidCatch","info","console","render","_jsxs","Box","display","justifyContent","alignItems","background","width","height","children","flexDirection","_jsx","Text","fontSize","Link","color","href","axiosInstance","axios","create","interceptors","response","use","async","Promise","reject","useConnectSocket","token","socketRef","useRef","user","ChatState","useEffect","current","newSocket","io","query","on","email","emit","disconnect","makePaymentMpesa","amount","phoneNumber","toast","config","headers","Authorization","concat","data","post","_id","title","status","duration","position","timestamp","messageTime","Date","timeDifference","seconds","Math","floor","minutes","hours","days","options","hour","minute","month","day","year","toLocaleDateString","Requests","isOpen","onOpen","onClose","useDisclosure","clubRequests","setClubRequests","useState","loading","setLoading","navigate","useNavigate","fetchClubRequests","useCallback","get","_Fragment","Button","backgroundColor","_hover","onClick","Image","src","length","bottom","right","transform","bg","borderRadius","p","Modal","ModalOverlay","backdropFilter","ModalContent","ModalHeader","textAlign","ModalCloseButton","ModalBody","flexDir","maxH","map","club","index","name","clubId","declineRequest","Spinner","size","ModalFooter","textDecor","notification","setNotification","displayValue","useBreakpointValue","base","md","textVisibility","w","paddingBottom","boxShadow","zIndex","top","fontWeight","userSelect","m","pl","visibility","variant","px","Menu","MenuButton","BellIcon","Badge","MenuList","notif","MenuItem","filter","n","sender","admission","as","Avatar","cursor","pic","IconButton","icon","Drawer","placement","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","CloseButton","DrawerBody","padding","isDisabled","provinces","logoutHandler","localStorage","removeItem","ProgressContainer","styled","div","_templateObject","_taggedTemplateLiteral","ProgressSlot","_templateObject2","progressAnimation","keyframes","_templateObject3","_ref","level","blinkingAnimation","_templateObject4","ProgressArrow","_templateObject5","_ref2","_ref3","userBelt","indexOf","belt","marginTop","GiBlackBelt","style","Paycheck","course","useToast","setUser","show","setShow","setPhoneNumber","socket","nothing","description","prev","update","off","textColor","checkAvailability","userCertificatesLength","certificates","courseIndex","id","isClosable","isCentered","fontFamily","rounded","PayPalScriptProvider","clientId","PayPalButtons","createOrder","actions","order","purchase_units","currency_code","value","toFixed","onApprove","message","handleAfterPay","capture","then","details","subscriptionID","onCancel","useColorModeValue","alt","Input","placeholder","type","onChange","e","target","minLength","maxLength","Divider","parseInt","colorScheme","courses","handleDownload","url","a","document","createElement","download","click","progressLevels","Flex","border","textDecoration","_m$sender4","_m$recipient","_m$sender5","_m$sender6","_m$sender7","setSelectedChat","setSend","handleClick","_m$sender","_m$sender2","_m$sender3","recipient","content","formatMessageTime","createdAt","messages","ScrollableFeed","VStack","align","spacing","overflowY","i","isUserMessage","maxW","alignSelf","Message","newMessage","setNewMessage","chatOptions","setChatOptions","selectedChatOption","setSelectedChatOption","setSender","rank","setRank","sending","setSending","selectedChat","send","setMessages","national","province","admin","coach","provincialCoach","nationalCoach","undefined","prevOptions","option","physicalCoach","fetchMessages","log","wsf","lg","handleChatClose","left","ScrollableChat","isLoading","event","key","userId","prevMessages","sendMessage","IoIosSend","AdComponent","window","adsbygoogle","push","className","chatOpen","setChatOpen","setClub","setNational","setProvince","isHovered","setHovered","live","setLive","userInfo","JSON","parse","getItem","requestClub","catch","newMessageReceived","showNotification","Notification","permission","audio","Audio","addEventListener","play","requestPermission","body","requests","prevUser","provinceRequests","nationalRequests","request","clubName","fetchClubs","country","setTimeout","fallback","UpperNav","mt","Progress","MyPrograms","FloatingChat","MdOutlineFiberSmartRecord","liveItem","prevLive","MdOutlineMarkUnreadChatAlt","transition","onMouseEnter","onMouseLeave"],"sourceRoot":""}