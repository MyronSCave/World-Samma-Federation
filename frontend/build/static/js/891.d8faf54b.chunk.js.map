{"version":3,"file":"static/js/891.d8faf54b.chunk.js","mappings":"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","sources":["miscellenious/Requests.js","miscellenious/upperNav.js","pages/Submit.js"],"sourcesContent":["import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  Image,\n  Text,\n  Flex,\n  Box,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Requests = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [clubRequests, setClubRequests] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { user } = ChatState();\n  const navigate = useNavigate();\n\n  const fetchClubRequests = useCallback(async () => {\n    if (!user) {\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/clubs/github/something/${user._id}`,\n        config\n      );\n      setClubRequests(data);\n    } catch (error) {\n      console.error(\"Error fetching club requests:\", error);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (user) {\n      fetchClubRequests();\n    }\n  }, [user, fetchClubRequests]);\n\n  const declineRequest = async (clubId) => {\n    if (!user || !clubId) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/clubs/decline/request/${clubId}/${user._id}`,\n        config\n      );\n      setClubRequests(data);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(\"Error fetching club requests/decline:\", error);\n    }\n  };\n  return (\n    <>\n      <Button\n        backgroundColor={\"white\"}\n        _hover={{ backgroundColor: \"transparent\" }}\n        onClick={onOpen}\n      >\n        <Image\n          src=\"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1709643622/icons8-group-48_asymxw.png\"\n          height={5}\n        />\n        {clubRequests && clubRequests.length > 0 && (\n          <Text\n            position=\"absolute\"\n            bottom=\"70%\"\n            right=\"70%\"\n            transform=\"translate(50%, 0)\"\n            bg=\"red.500\"\n            borderRadius=\"50%\"\n            width=\"2px\"\n            height=\"2px\"\n            p={1.5}\n          ></Text>\n        )}\n        <Text />\n      </Button>\n\n      <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay\n      bg=\"blackAlpha.300\"\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\n    />\n        <ModalContent>\n          <ModalHeader textAlign={\"center\"}>Clubs Requests</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            display={\"flex\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            flexDir={\"column\"}\n            maxH={\"300px\"}\n          >\n            {clubRequests && clubRequests.length > 0 ? (\n              clubRequests.map((club, index) => (\n                <Box\n                  display={\"flex\"}\n                  justifyContent={\"space-between\"}\n                  alignItems={\"center\"}\n                  width={\"100%\"}\n                  key={index}\n                >\n                  <Button\n                    key={club._id}\n                    justifyContent={\"space-between\"}\n                    onClick={() => navigate(`/showclub/${club._id}`)}\n                  >\n                    {index + 1}. Club Name: {club.name}\n                  </Button>\n                  <Button\n                    background={\"#f05e56\"}\n                    onClick={() => declineRequest(club._id)}\n                  >\n                    {loading ? <Spinner size={\"small\"} /> : `Decline`}\n                  </Button>\n                </Box>\n              ))\n            ) : (\n              <>\n                <Text>All club requests have been replied to.</Text>\n              </>\n            )}\n          </ModalBody>\n\n          <ModalFooter fontSize={\"small\"} textDecor={\"underline\"}>\n            These requests were made by club coaches.\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\nexport default Requests;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Badge,\n  Image,\n  useBreakpointValue,\n  IconButton,\n  CloseButton,\n} from \"@chakra-ui/react\";\nimport { Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { BellIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport Requests from \"./Requests\";\nimport React from \"react\";\n\nfunction UpperNav() {\n  const { user, notification, setNotification } = ChatState();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const navigate = useNavigate();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    setNotification([]);\n    navigate(\"/\");\n  };\n\n  const displayValue = useBreakpointValue({ base: \"none\", md: \"flex\" });\n\n  const textVisibility = useBreakpointValue({\n    base: \"hidden\",\n    md: \"visible\",\n  });\n\n  return (\n    <>\n      <Box\n        display={\"flex\"}\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p={3}\n        paddingBottom={2}\n        boxShadow=\"2xl\"\n        zIndex={10}\n        top={0}\n        position={\"fixed\"}\n      >\n        <Text\n          textAlign={\"center\"}\n          fontSize={{ base: \"small\", md: \"medium\" }}\n          fontWeight={\"bold\"}\n          userSelect={\"none\"}\n          p={0}\n          m={0}\n          pl={3}\n        >\n          Worldsamma\n        </Text>\n        <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\n          <Button\n            backgroundColor={\"transparent\"}\n            display={displayValue}\n            visibility={textVisibility}\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\n            onClick={() => {\n              navigate(\"/dashboard\");\n            }}\n          >\n            My Programs\n          </Button>\n          <Button\n            variant=\"ghost\"\n            onClick={onOpen}\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\n          >\n            <Text\n              display={{ base: \"none\", md: \"flex\" }}\n              px={4}\n              userSelect={\"none\"}\n            >\n              Discover\n            </Text>\n          </Button>\n          <Requests />\n        </Box>\n\n        <div>\n          <Menu>\n            <MenuButton p={1} position=\"relative\">\n              <BellIcon fontSize=\"2xl\" p={0} m={0} />\n              {notification.length > 0 && (\n                <Badge\n                  variant=\"subtle\"\n                  position=\"absolute\"\n                  top=\"-3px\"\n                  right=\"-3px\"\n                  backgroundColor={\"red\"}\n                  zIndex={1}\n                  borderRadius={\"50%\"}\n                  color=\"white\"\n                >\n                  {notification.length}\n                </Badge>\n              )}\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {`New Message from ${\n                    notif.sender ? notif.sender.name : \"Coach\"\n                  } ADM: ${notif.sender ? notif.sender.admission : \" \"}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton\n              as={Button}\n              bg=\"white\"\n              _hover={{ backgroundColor: \"transparent\" }}\n              onClick={onOpen}\n            >\n              {displayValue === \"flex\" ? (\n                <Avatar\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={user?.name}\n                  src={user?.pic}\n                />\n              ) : (\n                <IconButton\n                  backgroundColor={\"transparent\"}\n                  icon={\n                    <Image\n                      src=\"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1706276791/icons8-menu-50_afv1fe.png\"\n                      height={5}\n                    />\n                  }\n                />\n              )}\n            </MenuButton>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n      <DrawerOverlay\n      bg=\"blackAlpha.300\"\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\n    />\n        <DrawerContent>\n          <DrawerHeader\n            borderBottomWidth=\"1px\"\n            display={\"flex\"}\n            justifyContent={\"space-between\"}\n          >\n            Dashboard\n            <CloseButton onClick={onClose} />\n          </DrawerHeader>\n          <DrawerBody\n            display={\"flex\"}\n            flexDir={\"column\"}\n            justifyContent={\"space-between\"}\n            width={\"100%\"}\n          >\n            <Box\n              padding={3}\n              display={\"flex\"}\n              justifyContent={\"space-around\"}\n              flexDir={\"column\"}\n            >\n              <Button\n                display={\"flex\"}\n                justifyContent={\"left\"}\n                alignItems={\"center\"}\n                background={\"white\"}\n                m={1}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => navigate(\"/profile\")}\n              >\n                <Avatar\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={user?.name}\n                  src={user?.pic}\n                />\n                <Text p={2} m={1}>\n                  Profile\n                </Text>\n              </Button>\n              <Button\n                justifyContent={\"left\"}\n                background={\"white\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => {\n                  navigate(\"/dashboard\");\n                  onClose();\n                }}\n              >\n                My Programs\n              </Button>\n              <Button\n                justifyContent={\"start\"}\n                background={\"white\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => {\n                  navigate(\"/clubs\");\n                  onClose();\n                }}\n              >\n                Clubs\n              </Button>\n              <Button\n                justifyContent={\"left\"}\n                background={\"white\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                isDisabled={!user?.provinces}\n                onClick={() => {\n                  navigate(\"/province\");\n                  onClose();\n                }}\n              >\n                Provincial level\n              </Button>\n              <Button\n                background={\"white\"}\n                justifyContent={\"left\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => {\n                  navigate(\"/national\");\n                  onClose();\n                }}\n              >\n                National level\n              </Button>\n              <Button\n                background={\"white\"}\n                justifyContent={\"left\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n              >\n                International Championship\n              </Button>\n            </Box>\n            <Button onClick={logoutHandler}>Log out</Button>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default UpperNav;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Button,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  VStack,\n  Image,\n  useToast,\n  Box,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport UpperNav from \"../miscellenious/upperNav\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst SubmissionPage = ({ user }) => {\n  const [video, setVideo] = useState(null);\n  const [passportPhoto, setPassportPhoto] = useState(null);\n  const [videoLoading, setVideoLoading] = useState(false);\n  const [photoLoading, setPhotoLoading] = useState(false);\n  const [saveVideo, setSaveVideo] = useState(\"\");\n  const [savePhoto, setSavePhoto] = useState(\"\");\n  const toast = useToast();\n  const { title } = useParams();\n  const navigate = useNavigate();\n\n  const handleVideoChange = (event) => {\n    setVideo(event.target.files[0]);\n  };\n\n  const handlePhotoChange = (event) => {\n    setPassportPhoto(event.target.files[0]);\n  };\n  const submitHandler = useCallback(async () => {\n    if (!user) {\n      navigate(\"/dashboard\");\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/api/submit/${user._id}`,\n        {\n          savePhoto,\n          saveVideo,\n        },\n        config\n      );\n      navigate(\"/dashboard\");\n      toast({\n        title: \"Submission successful!\",\n        description: \"Wait for your results under 24hrs\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      console.log(error);\n      toast({\n        title: \"Error occurred trying to send your work!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  }, [toast, navigate, user, savePhoto, savePhoto]);\n\n  useEffect(() => {\n    if (savePhoto && saveVideo) {\n      submitHandler();\n    }\n  }, [savePhoto, saveVideo]);\n\n  const submitDetails = () => {\n    if (!video) {\n      toast({\n        title: \"Your recorded video please.\",\n        description: \"No file selected.\",\n        status: \"info\",\n        duration: 5000,\n      });\n      return;\n    }\n    if (!passportPhoto) {\n      toast({\n        title: \"Your passport photo please.\",\n        description: \"No file selected.\",\n        status: \"info\",\n        duration: 5000,\n      });\n      return;\n    }\n    if (video) {\n      setVideoLoading(true);\n\n      let data = new FormData();\n      data.append(\"file\", video);\n      data.append(\"upload_preset\", \"worldsamma\");\n\n      fetch(\"https://api.cloudinary.com/v1_1/dsdlgmgwi/video/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setSaveVideo(data.url);\n          setVideoLoading(false);\n        })\n        .catch((err) => {\n          setVideoLoading(false);\n          toast({\n            title: \"Error Occurred uploading your video.\",\n            description: \"Please try again later.\",\n            duration: 5000,\n            status: \"error\",\n          });\n        });\n    }\n    if (passportPhoto) {\n      setPhotoLoading(true);\n\n      let data = new FormData();\n      data.append(\"file\", passportPhoto);\n      data.append(\"upload_preset\", \"worldsamma\");\n\n      fetch(\"https://api.cloudinary.com/v1_1/dsdlgmgwi/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setSavePhoto(data.url);\n          setPhotoLoading(false);\n        })\n        .catch((err) => {\n          setPhotoLoading(false);\n          toast({\n            title: \"Error Occurred uploading your passport photo.\",\n            description: \"Please try again later.\",\n            duration: 5000,\n            status: \"error\",\n          });\n        });\n    }\n  };\n\n  return (\n    <VStack\n      align=\"center\"\n      justify={\"center\"}\n      width={\"100%\"}\n      background={\"white\"}\n      p={2}\n    >\n      <UpperNav />\n\n      <Text\n        fontSize={\"sm\"}\n        fontWeight={500}\n        bg={useColorModeValue(\"green.50\", \"green.900\")}\n        p={2}\n        px={3}\n        color={\"green.500\"}\n        rounded={\"full\"}\n        margin={1}\n        width={{ base: \"90%\", md: \"60%\" }}\n      >\n        {title}\n      </Text>\n      <Text textAlign={\"center\"} fontSize={\"large\"} fontWeight={\"bold\"}>\n        Submit your work for grading(*Passport picture as proof of identity)\n      </Text>\n      <Box width={{ base: \"100%\", md: \"50%\" }}>\n        {\" \"}\n        <FormControl isInvalid={!video}>\n          <FormLabel>Video</FormLabel>\n          <Input type=\"file\" accept=\"video/*\" onChange={handleVideoChange} />\n          {videoLoading && <p>Uploading video...</p>}\n          <FormErrorMessage>Please select a video file.</FormErrorMessage>\n        </FormControl>\n        <FormControl isInvalid={!passportPhoto}>\n          <FormLabel>Passport Photo</FormLabel>\n          <Input type=\"file\" accept=\"image/*\" onChange={handlePhotoChange} />\n          {photoLoading && <p>Uploading passport photo...</p>}\n          <FormErrorMessage>Please select a passport photo.</FormErrorMessage>\n        </FormControl>\n        <Button colorScheme=\"teal\" onClick={submitDetails}>\n          Submit\n        </Button>\n      </Box>\n    </VStack>\n  );\n};\n\nexport default SubmissionPage;\n"],"names":["Requests","isOpen","onOpen","onClose","useDisclosure","clubRequests","setClubRequests","useState","loading","setLoading","user","ChatState","navigate","useNavigate","fetchClubRequests","useCallback","async","config","headers","Authorization","concat","token","data","axios","get","_id","error","console","useEffect","_jsxs","_Fragment","children","Button","backgroundColor","_hover","onClick","_jsx","Image","src","height","length","Text","position","bottom","right","transform","bg","borderRadius","width","p","Modal","ModalOverlay","backdropFilter","ModalContent","ModalHeader","textAlign","ModalCloseButton","ModalBody","display","justifyContent","alignItems","flexDir","maxH","map","club","index","Box","name","background","clubId","declineRequest","Spinner","size","ModalFooter","fontSize","textDecor","notification","setNotification","displayValue","useBreakpointValue","base","md","textVisibility","w","paddingBottom","boxShadow","zIndex","top","fontWeight","userSelect","m","pl","visibility","color","variant","px","Menu","MenuButton","BellIcon","Badge","MenuList","notif","MenuItem","filter","n","sender","admission","as","Avatar","cursor","pic","IconButton","icon","Drawer","placement","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","CloseButton","DrawerBody","padding","isDisabled","provinces","logoutHandler","localStorage","removeItem","_ref","video","setVideo","passportPhoto","setPassportPhoto","videoLoading","setVideoLoading","photoLoading","setPhotoLoading","saveVideo","setSaveVideo","savePhoto","setSavePhoto","toast","useToast","title","useParams","submitHandler","post","description","status","duration","isClosable","log","VStack","align","justify","UpperNav","useColorModeValue","rounded","margin","FormControl","isInvalid","FormLabel","Input","type","accept","onChange","event","target","files","FormErrorMessage","colorScheme","submitDetails","FormData","append","fetch","method","body","then","res","json","url","catch","err"],"sourceRoot":""}