{"version":3,"file":"static/js/21.3c3048a1.chunk.js","mappings":"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","sources":["components/config/formatTime.js","miscellenious/Requests.js","miscellenious/upperNav.js","Authentication/ProvinceInterim.js","pages/Provience.js","../node_modules/react-country-flag/src/index.tsx","../node_modules/@chakra-ui/form-control/src/form-label.tsx","../node_modules/@chakra-ui/input/src/input.tsx","../node_modules/@chakra-ui/layout/src/link.tsx","../node_modules/@chakra-ui/layout/src/stack/v-stack.tsx"],"sourcesContent":["const formatMessageTime = (timestamp) => {\n  const messageTime = new Date(timestamp);\n  const currentTime = new Date();\n\n  const timeDifference = currentTime - messageTime;\n  const seconds = Math.floor(timeDifference / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  if (seconds < 60) {\n    return \"Just now\";\n  } else if (minutes < 60) {\n    return `${minutes} minute${minutes === 1 ? \"\" : \"s\"} ago`;\n  } else if (hours < 24) {\n    return `${hours} hour${hours === 1 ? \"\" : \"s\"} ago`;\n  } else if (days === 1) {\n    return \"Yesterday\";\n  } else if (days < 7) {\n    return `${days} day${days === 1 ? \"\" : \"s\"} ago`;\n  } else {\n    const options = {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      year: \"numeric\",\n    };\n    return messageTime.toLocaleDateString(\"en-US\", options);\n  }\n};\nexport default formatMessageTime;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  Image,\n  Text,\n  Flex,\n  Box,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Requests = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [clubRequests, setClubRequests] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { user } = ChatState();\n  const navigate = useNavigate();\n\n  const fetchClubRequests = useCallback(async () => {\n    if (!user) {\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/clubs/github/something/${user._id}`,\n        config\n      );\n      setClubRequests(data);\n    } catch (error) {\n      console.error(\"Error fetching club requests:\", error);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (user) {\n      fetchClubRequests();\n    }\n  }, [user, fetchClubRequests]);\n\n  const declineRequest = async (clubId) => {\n    if (!user || !clubId) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/clubs/decline/request/${clubId}/${user._id}`,\n        config\n      );\n      setClubRequests(data);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(\"Error fetching club requests/decline:\", error);\n    }\n  };\n  return (\n    <>\n      <Button\n        backgroundColor={\"white\"}\n        _hover={{ backgroundColor: \"transparent\" }}\n        onClick={onOpen}\n      >\n        <Image\n          src=\"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1709643622/icons8-group-48_asymxw.png\"\n          height={5}\n        />\n        {clubRequests && clubRequests.length > 0 && (\n          <Text\n            position=\"absolute\"\n            bottom=\"70%\"\n            right=\"70%\"\n            transform=\"translate(50%, 0)\"\n            bg=\"red.500\"\n            borderRadius=\"50%\"\n            width=\"2px\"\n            height=\"2px\"\n            p={1.5}\n          ></Text>\n        )}\n        <Text />\n      </Button>\n\n      <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay\n      bg=\"blackAlpha.300\"\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\n    />\n        <ModalContent>\n          <ModalHeader textAlign={\"center\"}>Clubs Requests</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            display={\"flex\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            flexDir={\"column\"}\n            maxH={\"300px\"}\n          >\n            {clubRequests && clubRequests.length > 0 ? (\n              clubRequests.map((club, index) => (\n                <Box\n                  display={\"flex\"}\n                  justifyContent={\"space-between\"}\n                  alignItems={\"center\"}\n                  width={\"100%\"}\n                  key={index}\n                >\n                  <Button\n                    key={club._id}\n                    justifyContent={\"space-between\"}\n                    onClick={() => navigate(`/showclub/${club._id}`)}\n                  >\n                    {index + 1}. Club Name: {club.name}\n                  </Button>\n                  <Button\n                    background={\"#f05e56\"}\n                    onClick={() => declineRequest(club._id)}\n                  >\n                    {loading ? <Spinner size={\"small\"} /> : `Decline`}\n                  </Button>\n                </Box>\n              ))\n            ) : (\n              <>\n                <Text>All club requests have been replied to.</Text>\n              </>\n            )}\n          </ModalBody>\n\n          <ModalFooter fontSize={\"small\"} textDecor={\"underline\"}>\n            These requests were made by club coaches.\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\nexport default Requests;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Badge,\n  Image,\n  useBreakpointValue,\n  IconButton,\n  CloseButton,\n} from \"@chakra-ui/react\";\nimport { Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { BellIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport Requests from \"./Requests\";\nimport React from \"react\";\n\nfunction UpperNav() {\n  const { user, notification, setNotification } = ChatState();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const navigate = useNavigate();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    setNotification([]);\n    navigate(\"/\");\n  };\n\n  const displayValue = useBreakpointValue({ base: \"none\", md: \"flex\" });\n\n  const textVisibility = useBreakpointValue({\n    base: \"hidden\",\n    md: \"visible\",\n  });\n\n  return (\n    <>\n      <Box\n        display={\"flex\"}\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p={3}\n        paddingBottom={2}\n        boxShadow=\"2xl\"\n        zIndex={10}\n        top={0}\n        position={\"fixed\"}\n      >\n        <Text\n          textAlign={\"center\"}\n          fontSize={{ base: \"small\", md: \"medium\" }}\n          fontWeight={\"bold\"}\n          userSelect={\"none\"}\n          p={0}\n          m={0}\n          pl={3}\n        >\n          Worldsamma\n        </Text>\n        <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\n          <Button\n            backgroundColor={\"transparent\"}\n            display={displayValue}\n            visibility={textVisibility}\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\n            onClick={() => {\n              navigate(\"/dashboard\");\n            }}\n          >\n            My Programs\n          </Button>\n          <Button\n            variant=\"ghost\"\n            onClick={onOpen}\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\n          >\n            <Text\n              display={{ base: \"none\", md: \"flex\" }}\n              px={4}\n              userSelect={\"none\"}\n            >\n              Discover\n            </Text>\n          </Button>\n          <Requests />\n        </Box>\n\n        <div>\n          <Menu>\n            <MenuButton p={1} position=\"relative\">\n              <BellIcon fontSize=\"2xl\" p={0} m={0} />\n              {notification.length > 0 && (\n                <Badge\n                  variant=\"subtle\"\n                  position=\"absolute\"\n                  top=\"-3px\"\n                  right=\"-3px\"\n                  backgroundColor={\"red\"}\n                  zIndex={1}\n                  borderRadius={\"50%\"}\n                  color=\"white\"\n                >\n                  {notification.length}\n                </Badge>\n              )}\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {`New Message from ${\n                    notif.sender ? notif.sender.name : \"Coach\"\n                  } ADM: ${notif.sender ? notif.sender.admission : \" \"}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton\n              as={Button}\n              bg=\"white\"\n              _hover={{ backgroundColor: \"transparent\" }}\n              onClick={onOpen}\n            >\n              {displayValue === \"flex\" ? (\n                <Avatar\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={user?.name}\n                  src={user?.pic}\n                />\n              ) : (\n                <IconButton\n                  backgroundColor={\"transparent\"}\n                  icon={\n                    <Image\n                      src=\"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1706276791/icons8-menu-50_afv1fe.png\"\n                      height={5}\n                    />\n                  }\n                />\n              )}\n            </MenuButton>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n      <DrawerOverlay\n      bg=\"blackAlpha.300\"\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\n    />\n        <DrawerContent>\n          <DrawerHeader\n            borderBottomWidth=\"1px\"\n            display={\"flex\"}\n            justifyContent={\"space-between\"}\n          >\n            Dashboard\n            <CloseButton onClick={onClose} />\n          </DrawerHeader>\n          <DrawerBody\n            display={\"flex\"}\n            flexDir={\"column\"}\n            justifyContent={\"space-between\"}\n            width={\"100%\"}\n          >\n            <Box\n              padding={3}\n              display={\"flex\"}\n              justifyContent={\"space-around\"}\n              flexDir={\"column\"}\n            >\n              <Button\n                display={\"flex\"}\n                justifyContent={\"left\"}\n                alignItems={\"center\"}\n                background={\"white\"}\n                m={1}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => navigate(\"/profile\")}\n              >\n                <Avatar\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={user?.name}\n                  src={user?.pic}\n                />\n                <Text p={2} m={1}>\n                  Profile\n                </Text>\n              </Button>\n              <Button\n                justifyContent={\"left\"}\n                background={\"white\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => {\n                  navigate(\"/dashboard\");\n                  onClose();\n                }}\n              >\n                My Programs\n              </Button>\n              <Button\n                justifyContent={\"start\"}\n                background={\"white\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => {\n                  navigate(\"/clubs\");\n                  onClose();\n                }}\n              >\n                Clubs\n              </Button>\n              <Button\n                justifyContent={\"left\"}\n                background={\"white\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                isDisabled={!user?.provinces}\n                onClick={() => {\n                  navigate(\"/province\");\n                  onClose();\n                }}\n              >\n                Provincial level\n              </Button>\n              <Button\n                background={\"white\"}\n                justifyContent={\"left\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => {\n                  navigate(\"/national\");\n                  onClose();\n                }}\n              >\n                National level\n              </Button>\n              <Button\n                background={\"white\"}\n                justifyContent={\"left\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n              >\n                International Championship\n              </Button>\n            </Box>\n            <Button onClick={logoutHandler}>Log out</Button>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default UpperNav;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Center, Text, VStack } from \"@chakra-ui/layout\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useColorModeValue } from \"@chakra-ui/react\";\n\nconst ProvincialCoachForm = () => {\n  const [coaches, setCoaches] = useState([]);\n  const { user } = ChatState();\n  const [province, setProvince] = useState();\n  const [chairperson, setChairperson] = useState(\"\");\n  const [viceChair, setViceChair] = useState(\"\");\n  const [secretary, setSecretary] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!chairperson || !secretary || !viceChair || !user) {\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const info = { chairperson, secretary, viceChair };\n      const { data } = await axios.post(`/api/province/register`, info, config);\n      console.log(data);\n      setProvince(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSendRequest = async (coachId) => {\n    console.log(coachId);\n    if (!coachId || !user) {\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const body = { country: user.country, province: user.provinces };\n      const { data } = await axios.get(\n        `/api/province/${coachId}`,\n        body,\n        config\n      );\n      console.log(data);\n      setProvince(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getCoaches = useCallback(async () => {\n    if (!user) {\n      navigate(\"/dashboard\");\n      return;\n    }\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n      },\n    };\n    try {\n      const { data } = await axios.get(\"/api/province/my/province\", config);\n      setProvince(data);\n    } catch (error) {\n      console.log(error);\n    }\n    try {\n      const { data } = await axios.get(\"/api/province/get/coaches\", config);\n      setCoaches(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [user, navigate, setCoaches, setProvince]);\n\n  useEffect(() => {\n    if (user) {\n      getCoaches();\n    }\n  }, [getCoaches, user]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <VStack\n        spacing={4}\n        align=\"stretch\"\n        width={\"100%\"}\n        boxShadow=\"dark-lg\"\n        p=\"6\"\n        rounded=\"md\"\n        bg=\"white\"\n      >\n        {\" \"}\n        <Text\n          fontSize={\"sm\"}\n          fontWeight={500}\n          bg={useColorModeValue(\"green.50\", \"green.900\")}\n          p={2}\n          px={3}\n          color={\"green.500\"}\n          rounded={\"full\"}\n        >\n          Status (*\n          {province && province.registered ? \"Registered ✔️\" : \"Not registered\"}\n          )\n        </Text>\n        <Box\n          display={\"flex\"}\n          flexDir={\"column\"}\n          justifyContent={\"center\"}\n          alignItems={\"center\"}\n          height={\"200px\"}\n        >\n          <Text\n            textAlign={\"center\"}\n            fontSize={\"large\"}\n            fontWeight={\"bold\"}\n            color={\"cornflowerblue\"}\n          >\n            Send Requests to Coaches around {user?.provinces}\n          </Text>\n          {coaches.length === 0 && (\n            <Text textAlign={\"center\"}>No clubs in this region yet.</Text>\n          )}\n          <Box\n            display={\"flex\"}\n            height={\"200px\"}\n            overflowY={\"auto\"}\n            width={\"100%\"}\n            boxShadow=\"base\"\n            p=\"6\"\n            rounded=\"md\"\n            bg=\"white\"\n          >\n            {\" \"}\n            {coaches.length > 0 &&\n              coaches.map((coach, index) => (\n                <Text\n                  key={coach._id}\n                  display={\"flex\"}\n                  width={\"100%\"}\n                  justifyContent={\"space-between\"}\n                  alignItems={\"center\"}\n                  fontWeight={\"bold\"}\n                  p={1}\n                >\n                  {coach.coach.name} {coach.coach.admission}\n                  <Button\n                    onClick={() => handleSendRequest(coach?.coach._id)}\n                    borderRadius={20}\n                    background={\"#A020F0\"}\n                    color={\"white\"}\n                    _hover={{ color: \"black\" }}\n                    isDisabled={province?.requests.includes(coach.coach._id)}\n                  >\n                    {province?.requests.includes(coach.coach._id)\n                      ? \"Request Sent\"\n                      : \"Send Request\"}\n                  </Button>\n                </Text>\n              ))}\n          </Box>\n\n          <FormControl id=\"approvals\" isRequired>\n            <FormLabel>Required Approvals</FormLabel>\n            {province?.approvals.length}/20\n          </FormControl>\n        </Box>\n        <FormControl id=\"chairman\">\n          <FormLabel>Chairperson</FormLabel>\n          <Input\n            type=\"text\"\n            name=\"chairman\"\n            value={chairperson}\n            onChange={(e) => setChairperson(e.target.chairperson)}\n            placeholder=\"Input valid adm of the party\"\n            isInvalid={\n              !province?.approvals.some((adm) => adm.admission === chairperson)\n            }\n          />\n        </FormControl>\n        <FormControl id=\"secretary\" isRequired>\n          <FormLabel>Secretary</FormLabel>\n          <Input\n            type=\"text\"\n            name=\"secretary\"\n            value={secretary}\n            placeholder=\"Input valid adm of the party\"\n            isInvalid={\n              !province?.approvals.some((adm) => adm.admission === secretary)\n            }\n            onChange={(e) => setSecretary(e.target.secretary)}\n          />\n        </FormControl>\n        <FormControl id=\"vice-chairman\" isRequired>\n          <FormLabel>Vice Chairperson</FormLabel>\n          <Input\n            type=\"text\"\n            name=\"viceChairman\"\n            value={viceChair}\n            placeholder=\"Input valid adm of the party\"\n            isInvalid={\n              !province?.approvals.some((adm) => adm.admission === viceChair)\n            }\n            onChange={(e) => setViceChair(e.target.viceChair)}\n          />\n        </FormControl>\n        <FormControl id=\"provincial-coach\">\n          <FormLabel>Provincial Coach</FormLabel>\n          <Input\n            type=\"text\"\n            name=\"provincialCoach\"\n            value={user?.admission}\n            isDisabled={true}\n          />\n        </FormControl>\n        <Button\n          type=\"submit\"\n          colorScheme=\"blue\"\n          isDisabled={province?.approvals.length < 20}\n        >\n          Submit\n        </Button>\n      </VStack>\n    </form>\n  );\n};\n\nexport default ProvincialCoachForm;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Spinner,\n  Text,\n  useColorModeValue,\n  useToast,\n  Link,\n} from \"@chakra-ui/react\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport UpperNav from \"../miscellenious/upperNav\";\nimport axios from \"axios\";\nimport ProvincialCoachForm from \"../Authentication/ProvinceInterim\";\nimport formatMessageTime from \"../components/config/formatTime\";\nimport { getCountryFlag } from \"../assets/state\";\n\nconst Provience = () => {\n  const { user, province } = ChatState();\n  const [loading, setLoading] = useState(false);\n  const [clubs, setClubs] = useState([]);\n  const navigate = useNavigate();\n  const flag = getCountryFlag(user?.country);\n  const [donation, setDonation] = useState(undefined);\n\n  const [loadiing, setLoadiing] = useState(false);\n  const [show, setShow] = useState(false);\n  const toast = useToast();\n\n  const fetchClubs = useCallback(async () => {\n\n    if (!user) {\n      navigate(\"/dashboard\");\n      return;\n    }\n    if(!user.provinces){\n      navigate(\"/dashboard\");\n      return;\n    }\n    setLoading(true);\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n      },\n    };\n\n    try {\n      const { data } = await axios.get(\n        `/api/clubs/${user.country}/${user.provinces}`,\n        config\n      );\n\n      setClubs(data);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(\"Error fetching or creating clubs:\", error);\n    }\n  }, [user, setClubs, toast, setLoading]);\n  const getDonations = useCallback(async () => {\n    setLoadiing(true);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/donate/province`, config);\n\n      setDonation(data);\n      setLoadiing(false);\n    } catch (error) {\n      setLoadiing(false);\n      console.log(error);\n      toast({\n        title: \"An Error Occurred!\",\n        description: \"Please try again later\",\n        status: \"warning\",\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  }, [user, toast, setLoadiing, setDonation]);\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/dashboard\");\n      return;\n    }\n    fetchClubs();\n    getDonations();\n  }, [fetchClubs, navigate, user]);\n\n  const handleInterim = () => {\n    if (user.belt !== \"Black\") {\n      toast({\n        title: `Your highest rank is ${user.belt}`,\n        description:\n          \"Head of a Provincial Association must have attained Black.\",\n        status: \"info\",\n        isClosable: true,\n        duration: 5000,\n      });\n    } else {\n      setShow(true);\n    }\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDir=\"column\"\n      backgroundColor=\"white\"\n      overflowY={\"auto\"}\n      width=\"100%\"\n    >\n      <UpperNav />\n      <Box\n        display={\"flex\"}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        flexDir={\"column\"}\n        mt={20}\n      >\n        <Text textAlign=\"center\" fontSize={\"large\"} fontWeight={\"bold\"} p={3}>\n          Country: {user?.country} {flag}\n        </Text>\n        <Text textAlign=\"center\" fontSize={\"large\"} fontWeight={\"bold\"} p={3}>\n          {user?.provinces} Samma Association\n        </Text>\n        <Text textAlign={\"center\"}>\n          {loading ? (\n            <Spinner size={\"sm\"} />\n          ) : (\n            <Text>\n              Account: $\n              {donation && donation.length > 0 ? donation[0].fund : \"0\"}\n            </Text>\n          )}\n        </Text>\n        <Box\n          height={\"200px\"}\n          width={{ base: \"97%\", md: \"70%\" }}\n          overflowY={\"scroll\"}\n          m={1}\n          boxShadow=\"2xl\"\n          p=\"6\"\n          rounded=\"md\"\n          bg=\"white\"\n        >\n          {loading && <Spinner />}\n          {!loading && clubs.length === 0 && (\n            <>\n              <Text fontWeight={\"bold\"}>\n                No clubs available in this region yet 🚫\n              </Text>\n              <Link href=\"/clubs\" textDecoration={\"underline\"}>\n                Start your own club and lead the way!\n              </Link>\n            </>\n          )}\n          {clubs &&\n            clubs.map((subdivision) => (\n              <Button\n                border={\"1px solid #e803fc\"}\n                m={1}\n                key={subdivision._id}\n                onClick={() =>\n                  navigate(`/showclub/${subdivision._id}/${false}`)\n                }\n              >\n                {subdivision.name}\n                <Text\n                  fontSize={\"xm\"}\n                  bg={useColorModeValue(\"green.50\", \"green.900\")}\n                  color={\"green.500\"}\n                  rounded={\"full\"}\n                >\n                  (*\n                  {subdivision.registration ? \"Registered\" : \"Unregistered\"})\n                </Text>\n              </Button>\n            ))}\n        </Box>\n        <Box\n          display={\"flex\"}\n          flexDir={\"column\"}\n          justifyContent={\"center\"}\n          alignItems={\"center\"}\n          boxShadow=\"dark-lg\"\n          m={2}\n          p={4}\n          rounded=\"md\"\n          bg=\"white\"\n          fontStyle={\"italic\"}\n        >\n          {\" \"}\n          {loading && <Spinner />}\n          Officials: {!province && \"Viable position\"}\n          {province !== null ? (\n            <Box\n              display={\"flex\"}\n              flexDir={\"column\"}\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n              boxShadow=\"2xl\"\n              p=\"6\"\n              rounded=\"md\"\n              bg=\"white\"\n              fontStyle={\"italic\"}\n            >\n              <Text>\n                Coach: {province?.provincialCoach?.name}{\" \"}\n                {province?.provincialCoach?.otherName}{\" \"}\n                {province?.provincialCoach?.belt}\n              </Text>\n              <Text>Chairperson: {province?.chairman} </Text>\n              <Text>Secretary: {province?.secretary} </Text>\n              <Text>viceChairperson: {province?.viceChairman} </Text>\n              <Text>\n                Interim commencement: {formatMessageTime(province?.updatedAt)}{\" \"}\n              </Text>\n            </Box>\n          ) : (\n            <>\n              {\" \"}\n              {!show && (\n                <Button\n                  bg={\"purple\"}\n                  color={\"white\"}\n                  _hover={{ color: \"black\" }}\n                  borderRadius={20}\n                  onClick={() => {\n                    handleInterim();\n                  }}\n                >\n                  Claim Interim Leadership\n                </Button>\n              )}\n              {show && <ProvincialCoachForm />}\n            </>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Provience;\n","import * as React from 'react';\n\nconst DEFAULT_CDN_URL =\n  'https://cdn.jsdelivr.net/gh/lipis/flag-icons/flags/4x3/';\nconst DEFAULT_CDN_SUFFIX = 'svg';\n\n// offset between uppercase ascii and regional indicator symbols\nconst OFFSET = 127397;\n\ninterface EmojiProps extends React.HTMLAttributes<HTMLSpanElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: false;\n}\n\ninterface ImgProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: true;\n}\n\nexport type ReactCountryFlagProps = EmojiProps | ImgProps;\n\nexport const ReactCountryFlag = ({\n  cdnSuffix = DEFAULT_CDN_SUFFIX,\n  cdnUrl = DEFAULT_CDN_URL,\n  countryCode,\n  style,\n  svg = false,\n  ...props\n}: ReactCountryFlagProps) => {\n  if (typeof countryCode !== 'string') {\n    return null;\n  }\n\n  if (svg) {\n    const flagUrl = `${cdnUrl}${countryCode.toLowerCase()}.${cdnSuffix}`;\n\n    return (\n      <img\n        {...props}\n        src={flagUrl}\n        style={{\n          display: 'inline-block',\n          width: '1em',\n          height: '1em',\n          verticalAlign: 'middle',\n          ...style,\n        }}\n      />\n    );\n  }\n\n  const emoji = countryCode\n    .toUpperCase()\n    .replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + OFFSET));\n\n  return (\n    <span\n      role=\"img\"\n      {...props}\n      style={{\n        display: 'inline-block',\n        fontSize: '1em',\n        lineHeight: '1em',\n        verticalAlign: 'middle',\n        ...style,\n      }}\n    >\n      {emoji}\n    </span>\n  );\n};\n\nexport default ReactCountryFlag;\n","import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useFormControlContext, useFormControlStyles } from \"./form-control\"\n\nexport interface FormLabelProps\n  extends HTMLChakraProps<\"label\">,\n    ThemingProps<\"FormLabel\"> {\n  /**\n   * @type React.ReactNode\n   */\n  requiredIndicator?: React.ReactNode\n  /**\n   * @type React.ReactNode\n   */\n  optionalIndicator?: React.ReactNode\n}\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nexport const FormLabel = forwardRef<FormLabelProps, \"label\">(function FormLabel(\n  passedProps,\n  ref,\n) {\n  const styles = useStyleConfig(\"FormLabel\", passedProps)\n  const props = omitThemingProps(passedProps)\n\n  const {\n    className,\n    children,\n    requiredIndicator = <RequiredIndicator />,\n    optionalIndicator = null,\n    ...rest\n  } = props\n\n  const field = useFormControlContext()\n  const ownProps = field?.getLabelProps(rest, ref) ?? { ref, ...rest }\n\n  return (\n    <chakra.label\n      {...ownProps}\n      className={cx(\"chakra-form__label\", props.className)}\n      __css={{\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles,\n      }}\n    >\n      {children}\n      {field?.isRequired ? requiredIndicator : optionalIndicator}\n    </chakra.label>\n  )\n})\n\nFormLabel.displayName = \"FormLabel\"\n\nexport interface RequiredIndicatorProps extends HTMLChakraProps<\"span\"> {}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nexport const RequiredIndicator = forwardRef<RequiredIndicatorProps, \"span\">(\n  function RequiredIndicator(props, ref) {\n    const field = useFormControlContext()\n    const styles = useFormControlStyles()\n\n    if (!field?.isRequired) return null\n\n    const className = cx(\"chakra-form__required-indicator\", props.className)\n\n    return (\n      <chakra.span\n        {...field?.getRequiredIndicatorProps(props, ref)}\n        __css={styles.requiredIndicator}\n        className={className}\n      />\n    )\n  },\n)\n\nRequiredIndicator.displayName = \"RequiredIndicator\"\n","import { FormControlOptions, useFormControl } from \"@chakra-ui/form-control\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\ninterface InputOptions {\n  /**\n   * The border color when the input is focused. Use color keys in `theme.colors`\n   * @example\n   * focusBorderColor = \"blue.500\"\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the input is invalid. Use color keys in `theme.colors`\n   * @example\n   * errorBorderColor = \"red.500\"\n   */\n  errorBorderColor?: string\n  /**\n   * The native HTML `size` attribute to be passed to the `input`\n   */\n  htmlSize?: number\n}\n\ntype Omitted = \"disabled\" | \"required\" | \"readOnly\" | \"size\"\n\nexport interface InputProps\n  extends Omit<HTMLChakraProps<\"input\">, Omitted>,\n    InputOptions,\n    ThemingProps<\"Input\">,\n    FormControlOptions {}\n\n/**\n * Input\n *\n * Element that allows users enter single valued data.\n *\n * @see Docs https://chakra-ui.com/docs/components/input\n */\nexport const Input = forwardRef<InputProps, \"input\">(function Input(\n  props,\n  ref,\n) {\n  const { htmlSize, ...rest } = props\n\n  const styles = useMultiStyleConfig(\"Input\", rest)\n  const ownProps = omitThemingProps(rest)\n  const input = useFormControl<HTMLInputElement>(ownProps)\n  const _className = cx(\"chakra-input\", props.className)\n\n  return (\n    <chakra.input\n      size={htmlSize}\n      {...input}\n      __css={styles.field}\n      ref={ref}\n      className={_className}\n    />\n  )\n})\n\nInput.displayName = \"Input\"\n\n// This is used in `input-group.tsx`\nInput.id = \"Input\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface LinkProps extends HTMLChakraProps<\"a\">, ThemingProps<\"Link\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   *\n   * @default false\n   */\n  isExternal?: boolean\n}\n\n/**\n * Links are accessible elements used primarily for navigation.\n *\n * It integrates well with other routing libraries like\n * React Router, Reach Router and Next.js Link.\n *\n * @example\n *\n * ```jsx\n * <Link as={ReactRouterLink} to=\"/home\">Home</Link>\n * ```\n *\n * @see Docs https://chakra-ui.com/link\n */\nexport const Link = forwardRef<LinkProps, \"a\">(function Link(props, ref) {\n  const styles = useStyleConfig(\"Link\", props)\n  const { className, isExternal, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.a\n      target={isExternal ? \"_blank\" : undefined}\n      rel={isExternal ? \"noopener\" : undefined}\n      ref={ref}\n      className={cx(\"chakra-link\", className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nLink.displayName = \"Link\"\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a vertical line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const VStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"column\" ref={ref} />\n))\n\nVStack.displayName = \"VStack\"\n"],"names":["timestamp","messageTime","Date","timeDifference","seconds","Math","floor","minutes","hours","days","concat","options","hour","minute","month","day","year","toLocaleDateString","Requests","isOpen","onOpen","onClose","useDisclosure","clubRequests","setClubRequests","useState","loading","setLoading","user","ChatState","navigate","useNavigate","fetchClubRequests","useCallback","async","config","headers","Authorization","token","data","axios","get","_id","error","console","useEffect","_jsxs","_Fragment","children","Button","backgroundColor","_hover","onClick","_jsx","Image","src","height","length","Text","position","bottom","right","transform","bg","borderRadius","width","p","Modal","ModalOverlay","backdropFilter","ModalContent","ModalHeader","textAlign","ModalCloseButton","ModalBody","display","justifyContent","alignItems","flexDir","maxH","map","club","index","Box","name","background","clubId","declineRequest","Spinner","size","ModalFooter","fontSize","textDecor","notification","setNotification","displayValue","useBreakpointValue","base","md","textVisibility","w","paddingBottom","boxShadow","zIndex","top","fontWeight","userSelect","m","pl","visibility","color","variant","px","Menu","MenuButton","BellIcon","Badge","MenuList","notif","MenuItem","filter","n","sender","admission","as","Avatar","cursor","pic","IconButton","icon","Drawer","placement","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","CloseButton","DrawerBody","padding","isDisabled","provinces","logoutHandler","localStorage","removeItem","ProvincialCoachForm","coaches","setCoaches","province","setProvince","chairperson","setChairperson","viceChair","setViceChair","secretary","setSecretary","getCoaches","log","onSubmit","e","preventDefault","info","post","VStack","spacing","align","rounded","useColorModeValue","registered","overflowY","coach","coachId","body","country","handleSendRequest","requests","includes","FormControl","id","isRequired","FormLabel","approvals","Input","type","value","onChange","target","placeholder","isInvalid","some","adm","colorScheme","Provience","_province$provincialC","_province$provincialC2","_province$provincialC3","clubs","setClubs","flag","getCountryFlag","donation","setDonation","undefined","loadiing","setLoadiing","show","setShow","toast","useToast","fetchClubs","getDonations","title","description","status","isClosable","UpperNav","mt","fund","Link","href","textDecoration","subdivision","border","registration","fontStyle","provincialCoach","otherName","belt","chairman","viceChairman","formatMessageTime","updatedAt","duration","_ref","cdnSuffix","_ref$cdnSuffix","_ref$cdnUrl","cdnUrl","countryCode","style","_ref$svg","svg","props","_objectWithoutPropertiesLoose","_excluded","flagUrl","toLowerCase","createElement","Object","assign","_extends","verticalAlign","emoji","toUpperCase","replace","_char","String","fromCodePoint","charCodeAt","role","lineHeight","forwardRef","passedProps","ref","_a","styles","useStyleConfig","omitThemingProps","className","requiredIndicator","jsx","RequiredIndicator","optionalIndicator","rest","field","useFormControlContext","ownProps","getLabelProps","jsxs","chakra","label","cx","__css","displayName","useFormControlStyles","span","getRequiredIndicatorProps","htmlSize","useMultiStyleConfig","input","useFormControl","_className","isExternal","a","rel","Stack","direction"],"sourceRoot":""}