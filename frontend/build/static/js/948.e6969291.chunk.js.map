{"version":3,"file":"static/js/948.e6969291.chunk.js","mappings":"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","sources":["components/config/chatlogics.js","components/config/formatTime.js","miscellenious/Requests.js","miscellenious/upperNav.js","miscellenious/Live.js","pages/ClubDetails.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nexport const isSameSenderMargin = (messages, m, i, userId) => {\n  const isCurrentUserSender = m.sender?.$oid === userId;\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender?.$oid === m.sender?.$oid &&\n    !isCurrentUserSender\n  ) {\n    return 33;\n  } else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender?.$oid !== m.sender?.$oid &&\n      !isCurrentUserSender) ||\n    (i === messages.length - 1 && !isCurrentUserSender)\n  ) {\n    return 0;\n  } else {\n    return \"auto\";\n  }\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1]?.sender?._id !== m.sender?._id ||\n      messages[i + 1]?.sender?._id === undefined) &&\n    messages[i]?.sender?._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  const lastMessageSenderId = messages[messages.length - 1].sender?.$oid;\n  return (\n    i === messages.length - 1 &&\n    lastMessageSenderId !== userId &&\n    lastMessageSenderId\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender?.$oid === m.sender?.$oid;\n};\n\nexport const getSenderName = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\nexport const getSenderId = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1]._id : users[0]._id;\n};\n\nexport const getSenderFull = (loggedUser, user) => {\n  return user[0]._id === loggedUser._id ? user[1] : user[0];\n};\n\nexport async function getUserById(userId, token) {\n  if (!userId && !token) {\n    return;\n  }\n  try {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/user/getuserid/${userId}`, config);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport function useConnectSocket(token) {\n  const socketRef = useRef(null);\n  const { user } = ChatState();\n\n  useEffect(() => {\n    if (socketRef.current) {\n      return;\n    }\n\n    const newSocket = io(\"/\", {\n      query: { token },\n    });\n\n    newSocket.on(\"connect\", () => {\n      const email = user?.email;\n\n      newSocket.emit(\"newConnection\", { email });\n    });\n\n    newSocket.on(\"disconnect\", () => {});\n\n    socketRef.current = newSocket;\n\n    return () => {\n      newSocket.disconnect();\n      socketRef.current = null;\n    };\n  }, [token, user?.email]);\n\n  return socketRef.current;\n}\nexport async function makePaymentMpesa(amount, phoneNumber, user, toast) {\n  if (!phoneNumber) {\n    return;\n  }\n  try {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`,\n      },\n    };\n    const { data } = await axios.post(\n      `/api/paycheck/makepaymentmpesa/${user._id}?amount=${amount}`,\n      { phoneNumber },\n      config\n    );\n\n    if (data) {\n      toast({\n        title: \"You have been prompt to finish your subscription process\",\n        status: \"info\",\n        duration: 1000,\n        position: \"bottom\",\n      });\n    }\n  } catch (error) {}\n}\nexport async function handleApprove(accountType, type, user, setUser) {\n  try {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n      },\n    };\n    const { data } = await axios.put(\n      `/api/paycheck/${user._id}/${type}/${accountType}`,\n      {},\n      config\n    );\n\n    const userData = await {\n      ...user,\n      accountType: data.accountType,\n      subscription: data.subscription,\n      day: data.day,\n    };\n    localStorage.setItem(\"userInfo\", JSON.stringify(userData));\n    setUser(userData);\n  } catch (error) {\n    console.log(error);\n    throw new Error(\"Error occurred\", error);\n  }\n}\n","const formatMessageTime = (timestamp) => {\n  const messageTime = new Date(timestamp);\n  const currentTime = new Date();\n\n  const timeDifference = currentTime - messageTime;\n  const seconds = Math.floor(timeDifference / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  if (seconds < 60) {\n    return \"Just now\";\n  } else if (minutes < 60) {\n    return `${minutes} minute${minutes === 1 ? \"\" : \"s\"} ago`;\n  } else if (hours < 24) {\n    return `${hours} hour${hours === 1 ? \"\" : \"s\"} ago`;\n  } else if (days === 1) {\n    return \"Yesterday\";\n  } else if (days < 7) {\n    return `${days} day${days === 1 ? \"\" : \"s\"} ago`;\n  } else {\n    const options = {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      year: \"numeric\",\n    };\n    return messageTime.toLocaleDateString(\"en-US\", options);\n  }\n};\nexport default formatMessageTime;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  Image,\n  Text,\n  Flex,\n  Box,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Requests = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [clubRequests, setClubRequests] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { user } = ChatState();\n  const navigate = useNavigate();\n\n  const fetchClubRequests = useCallback(async () => {\n    if (!user) {\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/clubs/github/something/${user._id}`,\n        config\n      );\n      setClubRequests(data);\n    } catch (error) {\n      console.error(\"Error fetching club requests:\", error);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (user) {\n      fetchClubRequests();\n    }\n  }, [user, fetchClubRequests]);\n\n  const declineRequest = async (clubId) => {\n    if (!user || !clubId) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/clubs/decline/request/${clubId}/${user._id}`,\n        config\n      );\n      setClubRequests(data);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(\"Error fetching club requests/decline:\", error);\n    }\n  };\n  return (\n    <>\n      <Button\n        backgroundColor={\"white\"}\n        _hover={{ backgroundColor: \"transparent\" }}\n        onClick={onOpen}\n      >\n        <Image\n          src=\"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1709643622/icons8-group-48_asymxw.png\"\n          height={5}\n        />\n        {clubRequests && clubRequests.length > 0 && (\n          <Text\n            position=\"absolute\"\n            bottom=\"70%\"\n            right=\"70%\"\n            transform=\"translate(50%, 0)\"\n            bg=\"red.500\"\n            borderRadius=\"50%\"\n            width=\"2px\"\n            height=\"2px\"\n            p={1.5}\n          ></Text>\n        )}\n        <Text />\n      </Button>\n\n      <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay\n      bg=\"blackAlpha.300\"\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\n    />\n        <ModalContent>\n          <ModalHeader textAlign={\"center\"}>Clubs Requests</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            display={\"flex\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            flexDir={\"column\"}\n            maxH={\"300px\"}\n          >\n            {clubRequests && clubRequests.length > 0 ? (\n              clubRequests.map((club, index) => (\n                <Box\n                  display={\"flex\"}\n                  justifyContent={\"space-between\"}\n                  alignItems={\"center\"}\n                  width={\"100%\"}\n                  key={index}\n                >\n                  <Button\n                    key={club._id}\n                    justifyContent={\"space-between\"}\n                    onClick={() => navigate(`/showclub/${club._id}`)}\n                  >\n                    {index + 1}. Club Name: {club.name}\n                  </Button>\n                  <Button\n                    background={\"#f05e56\"}\n                    onClick={() => declineRequest(club._id)}\n                  >\n                    {loading ? <Spinner size={\"small\"} /> : `Decline`}\n                  </Button>\n                </Box>\n              ))\n            ) : (\n              <>\n                <Text>All club requests have been replied to.</Text>\n              </>\n            )}\n          </ModalBody>\n\n          <ModalFooter fontSize={\"small\"} textDecor={\"underline\"}>\n            These requests were made by club coaches.\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\nexport default Requests;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Badge,\n  Image,\n  useBreakpointValue,\n  IconButton,\n  CloseButton,\n} from \"@chakra-ui/react\";\nimport { Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { BellIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ChatState } from \"../components/Context/ChatProvider\";\nimport Requests from \"./Requests\";\nimport React from \"react\";\n\nfunction UpperNav() {\n  const { user, notification, setNotification } = ChatState();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const navigate = useNavigate();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    setNotification([]);\n    navigate(\"/\");\n  };\n\n  const displayValue = useBreakpointValue({ base: \"none\", md: \"flex\" });\n\n  const textVisibility = useBreakpointValue({\n    base: \"hidden\",\n    md: \"visible\",\n  });\n\n  return (\n    <>\n      <Box\n        display={\"flex\"}\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p={3}\n        paddingBottom={2}\n        boxShadow=\"2xl\"\n        zIndex={10}\n        top={0}\n        position={\"fixed\"}\n      >\n        <Text\n          textAlign={\"center\"}\n          fontSize={{ base: \"small\", md: \"medium\" }}\n          fontWeight={\"bold\"}\n          userSelect={\"none\"}\n          p={0}\n          m={0}\n          pl={3}\n        >\n          Worldsamma\n        </Text>\n        <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\n          <Button\n            backgroundColor={\"transparent\"}\n            display={displayValue}\n            visibility={textVisibility}\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\n            onClick={() => {\n              navigate(\"/dashboard\");\n            }}\n          >\n            My Programs\n          </Button>\n          <Button\n            variant=\"ghost\"\n            onClick={onOpen}\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\n          >\n            <Text\n              display={{ base: \"none\", md: \"flex\" }}\n              px={4}\n              userSelect={\"none\"}\n            >\n              Discover\n            </Text>\n          </Button>\n          <Requests />\n        </Box>\n\n        <div>\n          <Menu>\n            <MenuButton p={1} position=\"relative\">\n              <BellIcon fontSize=\"2xl\" p={0} m={0} />\n              {notification.length > 0 && (\n                <Badge\n                  variant=\"subtle\"\n                  position=\"absolute\"\n                  top=\"-3px\"\n                  right=\"-3px\"\n                  backgroundColor={\"red\"}\n                  zIndex={1}\n                  borderRadius={\"50%\"}\n                  color=\"white\"\n                >\n                  {notification.length}\n                </Badge>\n              )}\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {`New Message from ${\n                    notif.sender ? notif.sender.name : \"Coach\"\n                  } ADM: ${notif.sender ? notif.sender.admission : \" \"}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton\n              as={Button}\n              bg=\"white\"\n              _hover={{ backgroundColor: \"transparent\" }}\n              onClick={onOpen}\n            >\n              {displayValue === \"flex\" ? (\n                <Avatar\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={user?.name}\n                  src={user?.pic}\n                />\n              ) : (\n                <IconButton\n                  backgroundColor={\"transparent\"}\n                  icon={\n                    <Image\n                      src=\"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1706276791/icons8-menu-50_afv1fe.png\"\n                      height={5}\n                    />\n                  }\n                />\n              )}\n            </MenuButton>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n      <DrawerOverlay\n      bg=\"blackAlpha.300\"\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\n    />\n        <DrawerContent>\n          <DrawerHeader\n            borderBottomWidth=\"1px\"\n            display={\"flex\"}\n            justifyContent={\"space-between\"}\n          >\n            Dashboard\n            <CloseButton onClick={onClose} />\n          </DrawerHeader>\n          <DrawerBody\n            display={\"flex\"}\n            flexDir={\"column\"}\n            justifyContent={\"space-between\"}\n            width={\"100%\"}\n          >\n            <Box\n              padding={3}\n              display={\"flex\"}\n              justifyContent={\"space-around\"}\n              flexDir={\"column\"}\n            >\n              <Button\n                display={\"flex\"}\n                justifyContent={\"left\"}\n                alignItems={\"center\"}\n                background={\"white\"}\n                m={1}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => navigate(\"/profile\")}\n              >\n                <Avatar\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={user?.name}\n                  src={user?.pic}\n                />\n                <Text p={2} m={1}>\n                  Profile\n                </Text>\n              </Button>\n              <Button\n                justifyContent={\"left\"}\n                background={\"white\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => {\n                  navigate(\"/dashboard\");\n                  onClose();\n                }}\n              >\n                My Programs\n              </Button>\n              <Button\n                justifyContent={\"start\"}\n                background={\"white\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => {\n                  navigate(\"/clubs\");\n                  onClose();\n                }}\n              >\n                Clubs\n              </Button>\n              <Button\n                justifyContent={\"left\"}\n                background={\"white\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                isDisabled={!user?.provinces}\n                onClick={() => {\n                  navigate(\"/province\");\n                  onClose();\n                }}\n              >\n                Provincial level\n              </Button>\n              <Button\n                background={\"white\"}\n                justifyContent={\"left\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n                onClick={() => {\n                  navigate(\"/national\");\n                  onClose();\n                }}\n              >\n                National level\n              </Button>\n              <Button\n                background={\"white\"}\n                justifyContent={\"left\"}\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\n              >\n                International Championship\n              </Button>\n            </Box>\n            <Button onClick={logoutHandler}>Log out</Button>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default UpperNav;\n","import { Button, IconButton } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/modal\";\nimport { FaVideo } from \"react-icons/fa\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Box, Icon, Image, useToast } from \"@chakra-ui/react\";\nimport Peer from \"simple-peer\";\nimport { useParams } from \"react-router-dom\";\n\nconst Live = ({ user, club, socket }) => {\n  const currentVideo = useRef(null);\n  const peerRef = useRef(null);\n  const toast = useToast();\n  const [live, setLive] = useState(false);\n  const { clubId } = useParams();\n  let stream;\n\n  // const isCurrentUserStreaming = user && peerRef.current?.initiator;\n\n  useEffect(() => {\n    const userVideoElement = currentVideo.current;\n\n    if (userVideoElement) {\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!socket) {\n      return;\n    }\n    socket.on(\"startSignal\", () => {\n      const peer = createPeer(socket.id, stream);\n      peerRef.current = peer;\n      setLive(true);\n    });\n    // socket.on(\"signal\", ({ to, from, signal }) => {\n    //   io.to(to).emit(\"signal\", { from, signal });\n    // });\n    return () => {\n      socket.off(\"startSignal\");\n      // socket.off(\"signal\");\n    };\n  }, [socket]);\n  const startCameraStream = () => {\n    if (!socket) {\n      return;\n    }\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        const videoElement = currentVideo.current;\n\n        if (!videoElement) {\n          throw new Error(\"Video element not defined.\");\n        }\n\n        videoElement.srcObject = stream;\n\n        // peerRef.current?.on(\"stream\", (otherStream) => {\n        //   otherUserVideo.current.srcObject = otherStream;\n        // });\n\n        socket.emit(\"startLiveSession\", clubId);\n      })\n      .catch((error) => {\n        console.error(\"Media Device access error:\", error);\n        toast({\n          title: \"Media Device access error\",\n          duration: 2000,\n          position: \"bottom\",\n          isClosable: true,\n        });\n      });\n  };\n\n  function createPeer(myId, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    // peer.on(\"signal\", (signal) => {\n    //   socket.emit(\"signal\", {\n    //     to: coachSocketId,\n    //     from: myId,\n    //     signal,\n    //   });\n    // });\n\n    return peer;\n  }\n\n  const handleEndCall = () => {\n    setLive(false);\n    const videoElement = currentVideo.current;\n\n    if (videoElement) {\n      const stream = videoElement.srcObject;\n      if (stream) {\n        const tracks = stream.getTracks();\n        tracks.forEach((track) => track.stop());\n      }\n      videoElement.srcObject = null;\n      peerRef.current?.destroy();\n    }\n  };\n\n  const videoStyleFull = {\n    display: \"flex\",\n    left: -80,\n    borderRadius: 10,\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"contain\",\n  };\n\n  return (\n    <>\n      {club?.coach._id === user?._id && (\n        <IconButton\n          icon={<Icon as={FaVideo} />}\n          colorScheme=\"purple\"\n          size=\"md\"\n          m={1}\n          onClick={() => {\n            startCameraStream();\n            setLive(true);\n          }}\n        />\n      )}\n\n      <div style={{ position: \"absolute\", top: 0, zIndex: 20 }}>\n        <video\n          id=\"currentVideo\"\n          ref={currentVideo}\n          autoPlay\n          playsInline\n          style={videoStyleFull}\n        />\n        {live && (\n          <Button\n            onClick={handleEndCall}\n            style={{ position: \"absolute\", bottom: -40, zIndex: 20, right: 5 }}\n            borderRadius={20}\n            _hover={{ background: \"red\" }}\n            background={\"red\"}\n          >\n            <Image\n              src=\"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1710313501/icons8-hang-up-50_ke2pag.png\"\n              borderRadius={\"50%\"}\n              height={7}\n            />\n          </Button>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Live;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  Box,\n  Heading,\n  Button,\n  IconButton,\n  Flex,\n  Image,\n  Text,\n  Textarea,\n  Icon,\n  useToast,\n  useColorModeValue,\n  Stack,\n  Skeleton,\n} from \"@chakra-ui/react\";\nimport { FaHeart } from \"react-icons/fa\";\nimport { SlUserFollow } from \"react-icons/sl\";\nimport axios from \"axios\";\nimport UpperNav from \"../miscellenious/upperNav\";\nimport formatMessageTime from \"../components/config/formatTime\";\nimport Live from \"../miscellenious/Live\";\nimport { useConnectSocket } from \"../components/config/chatlogics\";\n\nconst ClubDetails = ({ user }) => {\n  const { clubId } = useParams();\n  const [club, setClub] = useState(null);\n  const [broadcastMessage, setBroadcastMessage] = useState(\"\");\n  const [broadcast, setBroadcast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const toast = useToast();\n  const socket = useConnectSocket(user?.token);\n\n  const clubData = {\n    profilePicture: \"\",\n    backgroundPicture:\n      \"https://res.cloudinary.com/dsdlgmgwi/image/upload/v1713518908/Samma_pkmq5v.png\",\n  };\n  useEffect(() => {\n    if (!socket) {\n      return;\n    }\n    socket.on(\"liveSessionAvailable\", (clubId) => {\n      setLive(true);\n    });\n    socket.emit(\"other user\");\n    return () => {\n      socket.off(\"liveSessionAvailable\");\n    };\n  }, [socket]);\n\n  const getClub = useCallback(async () => {\n    if (!user || !clubId) {\n      navigate(\"/dashboard\");\n      return;\n    }\n    setLoading(true);\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/clubs/${clubId}`, config);\n      setClub(data);\n\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(\"Error fetching Club:\", error);\n    }\n  }, [user?.token, setClub, clubId]);\n\n  const handleBroadcast = useCallback(async () => {\n    if (!user || !clubId) {\n      navigate(\"/dashboard\");\n      return;\n    }\n    setLoading(true);\n\n    try {\n      const userId = user._id;\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/clubs/broadcast/${clubId}/${userId}`,\n        config\n      );\n\n      setBroadcast(data);\n      setBroadcastMessage(\"\");\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching BroadcastMessages:\", error);\n      console.log(error);\n    }\n  }, [user, user?.token, clubId, setBroadcastMessage]);\n\n  useEffect(() => {\n    if (user) {\n      getClub();\n      handleBroadcast();\n    }\n  }, [user, getClub, handleBroadcast]);\n\n  const handleFollow = async () => {\n    if (!user || !clubId) {\n      navigate(\"/dashboard\");\n      return;\n    }\n\n    try {\n      const userId = user._id;\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/clubs/follow/${clubId}/${userId}`,\n        config\n      );\n\n      setClub(data);\n    } catch (error) {\n      console.error(\"Error fetching Club:\", error);\n      console.log(error);\n    }\n  };\n\n  const handleLike = async () => {\n    if (!user || !clubId) {\n      navigate(\"/dashboard\");\n      return;\n    }\n\n    try {\n      const userId = user._id;\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/clubs/likes/${clubId}/${userId}`,\n        config\n      );\n\n      setClub(data);\n    } catch (error) {\n      console.error(\"Error fetching Club:\", error);\n      console.log(error);\n    }\n  };\n\n  const handleBroadcastMessage = async () => {\n    if (!user || !clubId) {\n      navigate(\"/clubs\");\n      return;\n    }\n\n    if (!broadcastMessage) {\n      toast({\n        title: \"Please include a message in the text area.\",\n      });\n      return;\n    }\n\n    try {\n      const userId = user._id;\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user?.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/api/clubs/message/${clubId}/${userId}`,\n        { broadcastMessage },\n        config\n      );\n\n      setBroadcast((prev) => [...prev, data]);\n    } catch (error) {\n      console.error(\"Error fetching Club:\", error);\n      console.log(error);\n    }\n  };\n  const handleAcceptRequest = async (memberId) => {\n    if (!user || !clubId) {\n      navigate(\"/dashboard\");\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/clubs/accept/${clubId}/${memberId}`,\n        config\n      );\n\n      setClub(data);\n    } catch (error) {\n      console.error(\"Error accepting request:\", error);\n      console.log(error);\n    }\n  };\n\n  const handleJoin = async () => {\n    if (!user || !clubId) {\n      navigate(\"/dashboard\");\n      return;\n    }\n    if (club?.membersRequests.some((member) => member._id === user?._id)) {\n      toast({\n        title: \"Request to join already sent.\",\n        description: \"Please wait for Coach to reply.\",\n      });\n      return;\n    }\n    try {\n      const userId = user._id;\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/clubs/join/${clubId}/${userId}`,\n        config\n      );\n\n      setClub(data);\n    } catch (error) {\n      console.error(\"Error accepting join request:\", error);\n      console.log(error);\n    }\n  };\n\n  return (\n    <Box\n      display={\"flex\"}\n      flexDir={\"column\"}\n      justifyContent={\"flex-start\"}\n      alignItems={\"center\"}\n      width={\"100%\"}\n      background={\"whitesmoke\"}\n      minH={\"100vh\"}\n      overflow={\"auto\"}\n    >\n      <UpperNav />\n      <Box\n        display={\"flex\"}\n        flexDir={\"column\"}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        width={\"100%\"}\n        mt={\"50\"}\n        position=\"relative\"\n        background={\"whitesmoke\"}\n      >\n        <Image\n          src={clubData.backgroundPicture}\n          alt=\"Background\"\n          top={0}\n          borderRadius=\"20\"\n          width={\"100%\"}\n        />\n\n        <Box\n          display={\"flex\"}\n          top={10}\n          left={{ base: \"0\", md: \"30%\" }}\n          textAlign=\"center\"\n          width={\"100%\"}\n          p={4}\n        >\n          <Image\n            src={club?.coach.pic}\n            marginTop={-10}\n            alt=\"*Coach profile pic\"\n            borderRadius=\"full\"\n            boxSize={{ base: \"100px\", md: \"200px\" }}\n            border=\"4px solid white\"\n          />\n          <Box\n            display={\"flex\"}\n            flexDir={\"column\"}\n            textAlign={\"start\"}\n            boxShadow=\"base\"\n            width={{ base: \"100%\", md: \"50%\" }}\n            p=\"4\"\n            rounded=\"md\"\n            bg=\"white\"\n          >\n            {\" \"}\n            <Heading as=\"h2\" size=\"lg\" textAlign={\"center\"}>\n              {club && club.name}\n            </Heading>\n            <Text\n              fontSize={\"sm\"}\n              fontWeight={500}\n              bg={useColorModeValue(\"green.50\", \"green.900\")}\n              p={2}\n              px={3}\n              color={\"green.500\"}\n              rounded={\"full\"}\n              margin={1}\n            >\n              Club Status (*\n              {club && club.registered ? \"Registered\" : \"Not registered\"})\n            </Text>\n            <Text>Coach Highest Rank: {club?.coach.belt}</Text>\n            <Text>Coach Code : {club?.coach.admission}</Text>\n            <Text>Club Unique Identifier: {club?.code}</Text>\n          </Box>\n        </Box>\n      </Box>\n      <Flex\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        spacing={4}\n        width={\"100%\"}\n        background={\"white\"}\n      >\n        {loading && !club ? (\n          <Stack width={\"100%\"} p={\"6\"}>\n            <Skeleton height=\"20px\" />\n            <Skeleton height=\"20px\" />\n            <Skeleton height=\"20px\" />\n          </Stack>\n        ) : (\n          <>\n            <Box\n              display={\"flex\"}\n              flexDir={\"column\"}\n              justifyContent={\"space-between\"}\n              alignItems={\"center\"}\n              p={0}\n              m={1}\n            >\n              <Button colorScheme=\"teal\" size=\"md\" onClick={handleFollow}>\n                {club && club.followers?.find((member) => member === user?._id)\n                  ? \"Unfollow\"\n                  : \"Follow\"}\n              </Button>\n              <Text fontSize={\"small\"}>{club && club.followers?.length}</Text>\n            </Box>\n\n            <Box\n              display={\"flex\"}\n              flexDir={\"column\"}\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n              fontSize={\"small\"}\n              p={0}\n              m={1}\n            >\n              <IconButton\n                icon={<Icon as={FaHeart} />}\n                colorScheme={\n                  club && club.likes.some((member) => member === user?._id)\n                    ? \"green\"\n                    : \"red\"\n                }\n                size=\"md\"\n                onClick={handleLike}\n              />\n              {club && club.likes?.length}\n            </Box>\n            <Box\n              display={\"flex\"}\n              flexDir={\"column\"}\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n              fontSize={\"small\"}\n              background={\"white\"}\n              p={0}\n              m={1}\n            >\n              {\" \"}\n              <Text textAlign={\"center\"} mt={-1} background={\"white\"}>\n                <Live user={user} club={club} socket={socket} />\n                <IconButton\n                  icon={<Icon as={SlUserFollow} />}\n                  colorScheme={\n                    club &&\n                    club.clubRequests.some((member) => member === user?._id)\n                      ? \"green\"\n                      : \"blue\"\n                  }\n                  size=\"md\"\n                  m={1}\n                  isDisabled={\n                    club &&\n                    (club.members.some((member) => member === user?._id) ||\n                      club.coach._id === user._id)\n                  }\n                  onClick={handleJoin}\n                />\n              </Text>\n              <Text textAlign={\"center\"} fontSize={\"small\"} mt={-1}>\n                {club?.membersRequests.some((member) => member._id === user?._id) ? \"Sent\": \"Join\"}\n              </Text>\n            </Box>\n          </>\n        )}\n      </Flex>\n      <Box\n        display={\"flex\"}\n        width={\"100%\"}\n        flexDir={\"column\"}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        background={\"white\"}\n      >\n        <Box\n          display={\"flex\"}\n          flexDir={\"column\"}\n          justifyContent={\"center\"}\n          alignItems={\"center\"}\n          width={{ base: \"100%\", md: \"60%\" }}\n          borderColor=\"#d142f5\"\n          background={\"white\"}\n          overflow=\"auto\"\n          boxShadow=\"base\"\n          mt={2}\n          p=\"4\"\n          rounded=\"md\"\n          bg=\"white\"\n        >\n          <Heading as=\"h3\" size=\"md\" mb={2} background={\"white\"}>\n            Broadcast Board\n          </Heading>\n          <Box\n            display={\"flex\"}\n            flexDir={\"column\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            overflowY=\"auto\"\n            minH={\"150px\"}\n            maxH={\"300px\"}\n            borderRadius={20}\n            width={\"100%\"}\n            overflow=\"auto\"\n            bg=\"white\"\n            border={\"2px solid white\"}\n            boxShadow=\"dark-lg\"\n            p=\"6\"\n            rounded=\"md\"\n          >\n            {broadcast && broadcast.length === 0 && (\n              <Text textAlign={\"center\"}> No message here.</Text>\n            )}\n            {broadcast &&\n              broadcast.map((message) => (\n                <Text\n                  key={message._id}\n                  background={\"#92e0a5\"}\n                  textAlign={\"center\"}\n                  fontWeight={\"bold\"}\n                  fontStyle={\"italic\"}\n                  width={{ base: \"90%\", md: \"70%\" }}\n                  borderRadius={20}\n                  m={2}\n                  p={1}\n                >\n                  <Text\n                    fontSize={\"small\"}\n                    textDecor={\"underline\"}\n                    textColor={\"#aa33b0\"}\n                  >\n                    {formatMessageTime(message.createdAt)}\n                  </Text>\n                  {message.content}\n                </Text>\n              ))}\n          </Box>\n          {club && user && club.coach._id === user._id && (\n            <Box\n              display={\"flex\"}\n              flexDir={\"column\"}\n              width={\"100%\"}\n              height={\"100%\"}\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n              overflow={\"auto\"}\n            >\n              <Box\n                display={\"flex\"}\n                flexDir={\"column\"}\n                justifyContent={\"center\"}\n                alignItems={\"center\"}\n                overflowY=\"auto\"\n                borderRadius={20}\n                height={\"150px\"}\n                width={\"100%\"}\n                p={2}\n              >\n                <Heading as=\"h3\" size=\"md\" m={2}>\n                  Number of Requests received\n                </Heading>\n                {club && club.membersRequests.length === 0 && (\n                  <Text textAlign={\"center\"}>\n                    {\" \"}\n                    All requests have received responses.\n                  </Text>\n                )}\n\n                {club &&\n                  club.membersRequests.map((request, index) => (\n                    <Button\n                      fontSize={\"small\"}\n                      fontWeight={\"bold\"}\n                      onClick={() => handleAcceptRequest(request._id)}\n                      width={\"90%\"}\n                      m={1}\n                    >\n                      {index + 1}. Accept {request.name}, Adm:{\" \"}\n                      {request.admission} ✔️\n                    </Button>\n                  ))}\n              </Box>\n              <Textarea\n                width={{ base: \"80%\", md: \"60%\" }}\n                placeholder=\"Leave a message for club members...\"\n                value={broadcastMessage}\n                onChange={(e) => setBroadcastMessage(e.target.value)}\n              />\n              <Button\n                colorScheme=\"blue\"\n                size=\"sm\"\n                mt={2}\n                width={\"30%\"}\n                onClick={handleBroadcastMessage}\n              >\n                Post Message\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ClubDetails;\n"],"names":["useConnectSocket","token","socketRef","useRef","user","ChatState","useEffect","current","newSocket","io","query","on","email","emit","disconnect","async","makePaymentMpesa","amount","phoneNumber","toast","config","headers","Authorization","concat","data","axios","post","_id","title","status","duration","position","error","timestamp","messageTime","Date","timeDifference","seconds","Math","floor","minutes","hours","days","options","hour","minute","month","day","year","toLocaleDateString","Requests","isOpen","onOpen","onClose","useDisclosure","clubRequests","setClubRequests","useState","loading","setLoading","navigate","useNavigate","fetchClubRequests","useCallback","get","console","_jsxs","_Fragment","children","Button","backgroundColor","_hover","onClick","_jsx","Image","src","height","length","Text","bottom","right","transform","bg","borderRadius","width","p","Modal","ModalOverlay","backdropFilter","ModalContent","ModalHeader","textAlign","ModalCloseButton","ModalBody","display","justifyContent","alignItems","flexDir","maxH","map","club","index","Box","name","background","clubId","declineRequest","Spinner","size","ModalFooter","fontSize","textDecor","notification","setNotification","displayValue","useBreakpointValue","base","md","textVisibility","w","paddingBottom","boxShadow","zIndex","top","fontWeight","userSelect","m","pl","visibility","color","variant","px","Menu","MenuButton","BellIcon","Badge","MenuList","notif","MenuItem","filter","n","sender","admission","as","Avatar","cursor","pic","IconButton","icon","Drawer","placement","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","CloseButton","DrawerBody","padding","isDisabled","provinces","logoutHandler","localStorage","removeItem","_ref","socket","currentVideo","peerRef","useToast","live","setLive","useParams","peer","myId","stream","Peer","initiator","trickle","createPeer","id","off","coach","Icon","FaVideo","colorScheme","navigator","mediaDevices","getUserMedia","video","audio","then","videoElement","Error","srcObject","catch","isClosable","style","ref","autoPlay","playsInline","left","objectFit","handleEndCall","_peerRef$current","getTracks","forEach","track","stop","destroy","_club$followers","_club$followers2","_club$likes","setClub","broadcastMessage","setBroadcastMessage","broadcast","setBroadcast","getClub","handleBroadcast","userId","log","minH","overflow","UpperNav","mt","alt","marginTop","boxSize","border","rounded","Heading","useColorModeValue","margin","registered","belt","code","Flex","spacing","Stack","Skeleton","followers","find","member","FaHeart","likes","some","Live","SlUserFollow","members","membersRequests","description","borderColor","mb","overflowY","message","fontStyle","textColor","formatMessageTime","createdAt","content","request","memberId","handleAcceptRequest","Textarea","placeholder","value","onChange","e","target","prev"],"sourceRoot":""}